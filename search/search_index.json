{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IT Operations Notes Content - MkDocs - Github - CentOS 6 - CentOS 7 - Ubuntu 18 - Windows - vSphere - Cobbler - Zabbix - Saltstack - Tomcat - Shell Scripts - MS SQL Server","title":"Home"},{"location":"#it-operations-notes","text":"","title":"IT Operations Notes"},{"location":"#content","text":"- MkDocs - Github - CentOS 6 - CentOS 7 - Ubuntu 18 - Windows - vSphere - Cobbler - Zabbix - Saltstack - Tomcat - Shell Scripts - MS SQL Server","title":"Content"},{"location":"centos6/","text":"Install vm-tools on CentOS 6 minimal # yum -y install perl fuse-libs # mount /dev/cdrom /mnt/ # cp /mnt/VMwareTools....tar.gz /tmp # cd /tmp # tar -zxvf VMwareTools....tar.gz # cd vmware-tools-distrib # ./vmware-install.pl Start vmtools service manually # /etc/vmware-tools/services.sh start Examples of iptables configuration # cat /etc/sysconfig/iptables ip range -A INPUT -m iprange --src-range 172.17.0.0-172.25.255.255 -p tcp --dport 139 -j ACCEPT -A INPUT -m iprange --src-range 172.17.0.0-172.25.255.255 -p tcp --dport 445 -j ACCEPT ip source -A INPUT -i eth0 -s 192.168.100.0/24 -p tcp --dport 3128 -m state --state NEW,ESTABLISHED -j ACCEPT multi port -A INPUT -p tcp -m multiport --dports 22,53,80 -j ACCEPT -A INPUT -s 172.17.0.0/16 -p tcp -m multiport --dport 2415:2430 -j ACCEPT recent module -A INPUT -p tcp --dport 22 -i eth0 -m state --state NEW -m recent --set -A INPUT -p tcp --dport 22 -i eth0 -m state --state NEW -m recent --update --seconds 60 --hitcount 4 -j DROP -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT NFS Server configuration Install NFS Server from Packages # yum nfs-utils -y Configure NFS user's access # vi /etc/exports /home/library 172.17.105.0/24(rw,all_squash,anonuid=500,anongid=500,sync) # useradd vsphere -M -s /sbin/nologin # passwd vsphere # mkdir /home/library # chown vsphere:vsphere /home/library Configure NFS server port # vi /etc/sysconfig/nfs RQUOTAD_PORT=1001 LOCKD_TCPPORT=30001 LOCKD_UDPPORT=30001 MOUNTD_PORT=1002 Show NFS service port listening # rpcinfo -p Add NFS server port to iptables # vi /etc/sysconfig/iptables -A INPUT -s 172.17.105.0/24 -p tcp -m multiport --dport 111,875,892,32769,32803 -j ACCEPT -A INPUT -s 172.17.105.0/24 -p udp -m multiport --dport 111,875,892,32769,32803 -j ACCEPT Start services # /etc/init.d/rpcbind start # /etc/init.d/nfs start # chkconfig --level 3 rpcbind on # chkconfig --level 3 nfs on NFS Client CentOS # yum install showmount -y Ubuntu # sudo apt-get install nfs-common Mount NFS # mount -t nfs 172.17.105.127:/home/library /mnt NTP Server Configuration Modify configuration file # cat /etc/ntp.conf restrict 172.17.0.0 mask 255.255.0.0 nomodify restrict 172.25.0.0 mask 255.255.0.0 nomodify server ntp1.aliyun.com iburst Add port to iptables # cat /etc/sysconfig/iptables -A INPUT -p udp --dport 123 -j ACCEPT Start service # /etc/init.d/ntpd restart # /etc/init.d/iptables restart # chkconfig --level 3 ntpd on Query NTP Server current state # ntpq -p IPMI Tool Check BMC Controllor # dmidecode -t 38 Check IPMI tool whether intalled or not # rpm -qa | grep -i ipmi Install IPMI tool # yum install ipmitool -y Load kernel module # modprobe ipmi_watchdog # modprobe ipmi_poweroff # modprobe ipmi_devintf # modprobe ipmi_si # modprobe ipmi_msghandler Examples ipmitool command # ipmitool -I open sdr # ipmitool sensor get \"CPU 1 TEMP\" # ipmitool sdr entity 12.1 # ipmitool lan print # ipmitool user list 1","title":"CentOS6"},{"location":"centos6/#install-vm-tools-on-centos-6-minimal","text":"# yum -y install perl fuse-libs # mount /dev/cdrom /mnt/ # cp /mnt/VMwareTools....tar.gz /tmp # cd /tmp # tar -zxvf VMwareTools....tar.gz # cd vmware-tools-distrib # ./vmware-install.pl Start vmtools service manually # /etc/vmware-tools/services.sh start","title":"Install vm-tools on CentOS 6 minimal"},{"location":"centos6/#examples-of-iptables-configuration","text":"# cat /etc/sysconfig/iptables ip range -A INPUT -m iprange --src-range 172.17.0.0-172.25.255.255 -p tcp --dport 139 -j ACCEPT -A INPUT -m iprange --src-range 172.17.0.0-172.25.255.255 -p tcp --dport 445 -j ACCEPT ip source -A INPUT -i eth0 -s 192.168.100.0/24 -p tcp --dport 3128 -m state --state NEW,ESTABLISHED -j ACCEPT multi port -A INPUT -p tcp -m multiport --dports 22,53,80 -j ACCEPT -A INPUT -s 172.17.0.0/16 -p tcp -m multiport --dport 2415:2430 -j ACCEPT recent module -A INPUT -p tcp --dport 22 -i eth0 -m state --state NEW -m recent --set -A INPUT -p tcp --dport 22 -i eth0 -m state --state NEW -m recent --update --seconds 60 --hitcount 4 -j DROP -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT","title":"Examples of iptables configuration"},{"location":"centos6/#nfs-server-configuration","text":"Install NFS Server from Packages # yum nfs-utils -y Configure NFS user's access # vi /etc/exports /home/library 172.17.105.0/24(rw,all_squash,anonuid=500,anongid=500,sync) # useradd vsphere -M -s /sbin/nologin # passwd vsphere # mkdir /home/library # chown vsphere:vsphere /home/library Configure NFS server port # vi /etc/sysconfig/nfs RQUOTAD_PORT=1001 LOCKD_TCPPORT=30001 LOCKD_UDPPORT=30001 MOUNTD_PORT=1002 Show NFS service port listening # rpcinfo -p Add NFS server port to iptables # vi /etc/sysconfig/iptables -A INPUT -s 172.17.105.0/24 -p tcp -m multiport --dport 111,875,892,32769,32803 -j ACCEPT -A INPUT -s 172.17.105.0/24 -p udp -m multiport --dport 111,875,892,32769,32803 -j ACCEPT Start services # /etc/init.d/rpcbind start # /etc/init.d/nfs start # chkconfig --level 3 rpcbind on # chkconfig --level 3 nfs on NFS Client CentOS # yum install showmount -y Ubuntu # sudo apt-get install nfs-common Mount NFS # mount -t nfs 172.17.105.127:/home/library /mnt","title":"NFS Server configuration"},{"location":"centos6/#ntp-server-configuration","text":"Modify configuration file # cat /etc/ntp.conf restrict 172.17.0.0 mask 255.255.0.0 nomodify restrict 172.25.0.0 mask 255.255.0.0 nomodify server ntp1.aliyun.com iburst Add port to iptables # cat /etc/sysconfig/iptables -A INPUT -p udp --dport 123 -j ACCEPT Start service # /etc/init.d/ntpd restart # /etc/init.d/iptables restart # chkconfig --level 3 ntpd on Query NTP Server current state # ntpq -p","title":"NTP Server Configuration"},{"location":"centos6/#ipmi-tool","text":"Check BMC Controllor # dmidecode -t 38 Check IPMI tool whether intalled or not # rpm -qa | grep -i ipmi Install IPMI tool # yum install ipmitool -y Load kernel module # modprobe ipmi_watchdog # modprobe ipmi_poweroff # modprobe ipmi_devintf # modprobe ipmi_si # modprobe ipmi_msghandler Examples ipmitool command # ipmitool -I open sdr # ipmitool sensor get \"CPU 1 TEMP\" # ipmitool sdr entity 12.1 # ipmitool lan print # ipmitool user list 1","title":"IPMI Tool"},{"location":"centos7/","text":"Reference documentation Aliyun OPSX mirros Configuring Kernel Parameters Install vm-tools on CentOS 7 minimal # yum -y install perl net-tools # mount /dev/cdrom /mnt/ # cp /mnt/VMwareTools....tar.gz /tmp # cd /tmp # tar -zxvf VMwareTools....tar.gz # cd vmware-tools-distrib # ./vmware-install.pl # systemctl status vmware-tools # /usr/bin/vmware-config-tools.pl Note :Don't pass in the -defaults argument, select no when you are prompted \"Do you want to enable Guest Authentication (vgauth)? Configure system proxy # vi /etc/profile http_proxy=http://username:password@yourproxy:8080/ ftp_proxy=http://username:password@yourproxy:8080/ no_proxy=\"127.0.0.1,192.168.1.1\" export http_proxy export ftp_proxy export no_proxy # source /etc/profile Set yum repository to aliyun mirror CentOS 7 # curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo EPEL 7 # wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo Disable selinux # vi /etc/selinux/config SELINUX=disabled # systemctl reboot Run command as another user # su -c founder /usr/local/tomcat/bin/startup.sh Bash command auto completion # yum install bash-completion -y Disable ipv6 # vi /etc/sysctl.d/01-ipv6.disable.conf net.ipv6.conf.all.disable_ipv6 = 1 net.ipv6.conf.default.disable_ipv6 = 1 # sysctl --system Synchronizing time with NTP server # vi /etc/chrony.conf server 172.17.105.109 iburst # systemctl restart chronyd Examples of selinux command Showing selinux context # ls -Z file Change selinux context # chcon -t var_log_t catalina.out Restore selinux context # restorecon -v catalina.out Change default SSH port # vi /etc/ssh/sshd_config Port 22 Note :If you want to change the port on a SELinux system,you have to tell SELinux about this change. # semanage port -a -t ssh_port_t -p tcp #PORTNUMBER Change apache server port # vi /etc/httpd/conf/httpd.conf Listen 80 Note :If you want to change the port on a SELinux system,you have to tell SELinux about this change. Find out default port with selinux supporting # semanage port -l | grep -w http_port_t http_port_t tcp 12345, 80, 443, 488, 8008, 8009, 8443 Add a new port # semanage port -a -t http_port_t -p tcp #PORTNUMBER Examples of command firewall-cmd # firewall-cmd --zone=public --add-port=8080-8081/tcp --permanent # firewall-cmd --zone=publice --add-rich-rule='rule family=\"ipv4\" source address=\"172.25.0.10\" accept' # firewall-cmd --zone=public --add-service=ftp --permanent # firewall-cmd --zone=public --add-rich-rule='rule family=\"ipv4\" source address=\"172.17.105.0/24\" service name=\"ssh\" accept' --permanent # firewall-cmd --zone=public --add-rich-rule='rule family=\"ipv4\" source address=\"172.17.105.0/24\" port port=\"80\" protocol=\"tcp\" accept' --permanent # firewall-cmd --zone=public --add-rich-rule='rule family=\"ipv4\" destination address=\"172.17.107.68\" service name=\"ftp\" accept' --permanent # firewall-cmd --list-all # firewall-cmd --zone=internal --list-all # firewall-cmd --zone=external --list-all # firewall-cmd --zone=dmz --list-all # firewall-cmd --zone-work --list-all # firewall-cmd --zone=work --add-interface=ens37 --permanent # firewall-cmd --zone=work --remove-service=ssh --permanent Network Command # ip addr # nmtui Examples of command nmcli # nmcli con show # nmcli dev show ens33 # nmcli con mod ens33 ipv4.dns \"202.96.209.5 202.96.209.133\" # nmcli con up ens33 Commands about route configuration # ip neighbour # ip route show | column -t # ip route add 10.15.150.0/24 via 192.168.150.253 dev enp0s3 # ip route del 10.15.150.0/24 # echo \"10.15.150.0/24 via 192.168.150.253 dev enp0s3\" > /etc/sysconfig/network-scripts/route-enp0s3 # echo \"10.25.250.0/24 via 192.168.150.253 dev enp0s3\" >> /etc/sysconfig/network-scripts/route-enp0s3 # remove route 169.254.0.0/16 If you want to use CentOS 6 network command,please install net-tools package. # yum install net-tools -y Examples of command ss # ss -nat # ss -natp | column -t # ss -not | column -t Install cockpit # yum -y install cockpit # firewall-cmd --zone=public --add-service=cockpit --permanent # systemctl enable cockpit.socket https://172.17.105.81:9090 Install webmin echo \"[Webmin] name=Webmin Distribution Neutral baseurl=http://download.webmin.com/download/yum enabled=1 gpgcheck=1 gpgkey=http://www.webmin.com/jcameron-key.asc\" >/etc/yum.repos.d/webmin.repo # yum install webmin -y # firewall-cmd --zone=public --add-port=10000/tcp --permanent https://172.17.105.81:10000","title":"CentOS7"},{"location":"centos7/#reference-documentation","text":"Aliyun OPSX mirros Configuring Kernel Parameters","title":"Reference documentation"},{"location":"centos7/#install-vm-tools-on-centos-7-minimal","text":"# yum -y install perl net-tools # mount /dev/cdrom /mnt/ # cp /mnt/VMwareTools....tar.gz /tmp # cd /tmp # tar -zxvf VMwareTools....tar.gz # cd vmware-tools-distrib # ./vmware-install.pl # systemctl status vmware-tools # /usr/bin/vmware-config-tools.pl Note :Don't pass in the -defaults argument, select no when you are prompted \"Do you want to enable Guest Authentication (vgauth)?","title":"Install vm-tools on CentOS 7 minimal"},{"location":"centos7/#configure-system-proxy","text":"# vi /etc/profile http_proxy=http://username:password@yourproxy:8080/ ftp_proxy=http://username:password@yourproxy:8080/ no_proxy=\"127.0.0.1,192.168.1.1\" export http_proxy export ftp_proxy export no_proxy # source /etc/profile","title":"Configure system proxy"},{"location":"centos7/#set-yum-repository-to-aliyun-mirror","text":"CentOS 7 # curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo EPEL 7 # wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo","title":"Set yum repository to aliyun mirror"},{"location":"centos7/#disable-selinux","text":"# vi /etc/selinux/config SELINUX=disabled # systemctl reboot","title":"Disable selinux"},{"location":"centos7/#run-command-as-another-user","text":"# su -c founder /usr/local/tomcat/bin/startup.sh","title":"Run command as another user"},{"location":"centos7/#bash-command-auto-completion","text":"# yum install bash-completion -y","title":"Bash command auto completion"},{"location":"centos7/#disable-ipv6","text":"# vi /etc/sysctl.d/01-ipv6.disable.conf net.ipv6.conf.all.disable_ipv6 = 1 net.ipv6.conf.default.disable_ipv6 = 1 # sysctl --system","title":"Disable ipv6"},{"location":"centos7/#synchronizing-time-with-ntp-server","text":"# vi /etc/chrony.conf server 172.17.105.109 iburst # systemctl restart chronyd","title":"Synchronizing time with NTP server"},{"location":"centos7/#examples-of-selinux-command","text":"Showing selinux context # ls -Z file Change selinux context # chcon -t var_log_t catalina.out Restore selinux context # restorecon -v catalina.out","title":"Examples of selinux command"},{"location":"centos7/#change-default-ssh-port","text":"# vi /etc/ssh/sshd_config Port 22 Note :If you want to change the port on a SELinux system,you have to tell SELinux about this change. # semanage port -a -t ssh_port_t -p tcp #PORTNUMBER","title":"Change default SSH port"},{"location":"centos7/#change-apache-server-port","text":"# vi /etc/httpd/conf/httpd.conf Listen 80 Note :If you want to change the port on a SELinux system,you have to tell SELinux about this change. Find out default port with selinux supporting # semanage port -l | grep -w http_port_t http_port_t tcp 12345, 80, 443, 488, 8008, 8009, 8443 Add a new port # semanage port -a -t http_port_t -p tcp #PORTNUMBER","title":"Change apache server port"},{"location":"centos7/#examples-of-command-firewall-cmd","text":"# firewall-cmd --zone=public --add-port=8080-8081/tcp --permanent # firewall-cmd --zone=publice --add-rich-rule='rule family=\"ipv4\" source address=\"172.25.0.10\" accept' # firewall-cmd --zone=public --add-service=ftp --permanent # firewall-cmd --zone=public --add-rich-rule='rule family=\"ipv4\" source address=\"172.17.105.0/24\" service name=\"ssh\" accept' --permanent # firewall-cmd --zone=public --add-rich-rule='rule family=\"ipv4\" source address=\"172.17.105.0/24\" port port=\"80\" protocol=\"tcp\" accept' --permanent # firewall-cmd --zone=public --add-rich-rule='rule family=\"ipv4\" destination address=\"172.17.107.68\" service name=\"ftp\" accept' --permanent # firewall-cmd --list-all # firewall-cmd --zone=internal --list-all # firewall-cmd --zone=external --list-all # firewall-cmd --zone=dmz --list-all # firewall-cmd --zone-work --list-all # firewall-cmd --zone=work --add-interface=ens37 --permanent # firewall-cmd --zone=work --remove-service=ssh --permanent","title":"Examples of command firewall-cmd"},{"location":"centos7/#network-command","text":"# ip addr # nmtui Examples of command nmcli # nmcli con show # nmcli dev show ens33 # nmcli con mod ens33 ipv4.dns \"202.96.209.5 202.96.209.133\" # nmcli con up ens33 Commands about route configuration # ip neighbour # ip route show | column -t # ip route add 10.15.150.0/24 via 192.168.150.253 dev enp0s3 # ip route del 10.15.150.0/24 # echo \"10.15.150.0/24 via 192.168.150.253 dev enp0s3\" > /etc/sysconfig/network-scripts/route-enp0s3 # echo \"10.25.250.0/24 via 192.168.150.253 dev enp0s3\" >> /etc/sysconfig/network-scripts/route-enp0s3 # remove route 169.254.0.0/16 If you want to use CentOS 6 network command,please install net-tools package. # yum install net-tools -y Examples of command ss # ss -nat # ss -natp | column -t # ss -not | column -t","title":"Network Command"},{"location":"centos7/#install-cockpit","text":"# yum -y install cockpit # firewall-cmd --zone=public --add-service=cockpit --permanent # systemctl enable cockpit.socket https://172.17.105.81:9090","title":"Install cockpit"},{"location":"centos7/#install-webmin","text":"echo \"[Webmin] name=Webmin Distribution Neutral baseurl=http://download.webmin.com/download/yum enabled=1 gpgcheck=1 gpgkey=http://www.webmin.com/jcameron-key.asc\" >/etc/yum.repos.d/webmin.repo # yum install webmin -y # firewall-cmd --zone=public --add-port=10000/tcp --permanent https://172.17.105.81:10000","title":"Install webmin"},{"location":"cobbler/","text":"Cobbler Reference Docs Rehat Documentation about Cobbler Centos kickstart introduction Install Cobbler on Centos 7 Disable Firewall # systemctl stop firewalld # systemctl disable firewalld Disable SELinux # vi /etc/selinux/config SELINUX=disabled Install EPEL repository # rpm -ivh https://mirrors.aliyun.com/centos/7.6.1810/extras/x86_64/Packages/epel-release-7-11.noarch.rpm Install cobbler # yum install httpd tftp dhcp cobbler cobbler-web pykickstart xinetd -y # yum install debmirror.noarch -y Start service # systemctl start httpd # systemctl enable httpd # systemctl start cobblerd # systemctl enable cobblerd Run cobbler check # cobbler check # vi /etc/cobbler/settings server: 192.168.152.101 next_server: 192.168.152.101 # vim /etc/xinetd.d/tftp disable=no # vim /etc/cobbler/settings proxy_url_ext: http://172.16.2.199:80 # systemctl restart cobblerd # cobbler get-loaders --force Start rsync service # systemctl start rsyncd Modify default password # openssl passwd -1 -salt 'cobbler' 'cobbler' # vim /etc/cobbler/settings default_password_crypted Configure DHCP template # vim /etc/cobbler/settings manage_dhcp: 1 # vim /etc/cobbler/dhcp.template Rum cobbler sync # systemctl start xinetd # systemctl restart cobblerd # cobbler sync Configure os image Import OS image file # mount /dev/cdrom /mnt # cobbler import --path=/mnt/ --name=CentOS-6.10-x86_64 --arch=x86_64 Custom kickstrat file # vi /var/lib/cobbler/kickstarts/centos7-x86_64.ks # cobbler profile edit --name=CentOS-7-x86_64 --kickstart=/var/lib/cobbler/kickstarts/centos7-x86_64.ks # cobbler sync View cobbler profile # cobbler profile list # cobbler profile report --name=CentOS-6.10-x86_64 Examples of kickstart files Centos 7 on legacy bios # This kickstart file should only be used for installing CentOS 7. #platform=x86, AMD64, or Intel EM64T # System authorization information auth --useshadow --enablemd5 # System bootloader configuration bootloader --location=mbr # Partition clearing information clearpart --all --initlabel # Use text mode install text # Firewall configuration firewall --enabled # Run the Setup Agent on first boot firstboot --disable # System keyboard keyboard us # System language lang zh_CN.UTF-8 # Use network installation url --url=$tree # Network information $SNIPPET('network_config') # Reboot after installation reboot #Root password rootpw --iscrypted $default_password_crypted # SELinux configuration selinux --enforcing # Do not configure the X Window System skipx # System timezone timezone Asia/Shanghai # Install OS instead of upgrade install # Clear the Master Boot Record zerombr # Allow anaconda to partition the system as needed part /boot --fstype=ext4 --ondisk=sda --size=500 part swap --ondisk=sda --size=16384 part / --fstype=ext4 --ondisk=sda --grow --size=5000 %pre $SNIPPET('log_ks_pre') $SNIPPET('kickstart_start') $SNIPPET('pre_install_network_config') # Enable installation monitoring $SNIPPET('pre_anamon') %end %packages $SNIPPET('func_install_if_enabled') %end %addon com_redhat_kdump --disable --reserve-mb='auto' %end %post --nochroot $SNIPPET('log_ks_post_nochroot') %end %post $SNIPPET('log_ks_post') ---------- $SNIPPET('post_install_kernel_options') $SNIPPET('post_install_network_config') $SNIPPET('func_register_if_enabled') $SNIPPET('download_config_files') $SNIPPET('koan_environment') $SNIPPET('redhat_register') $SNIPPET('cobbler_register') # Enable post-install boot notification $SNIPPET('post_anamon') # Start final steps $SNIPPET('kickstart_done') # End final steps %end Centos 7 on uefi bios # This kickstart file should only be used for installing CentOS 7. #platform=x86, AMD64, or Intel EM64T auth --enableshadow --passalgo=sha512 url --url=$tree text firstboot --disable firewall --enabled ignoredisk --only-use=sda selinux --enforcing reboot keyboard us lang zh_CN.UTF-8 network --bootproto=dhcp --hostname=Centos7 --device=ens33 --activate rootpw --iscrypted $default_password_crypted timezone Asia/Shanghai bootloader --append=\" crashkernel=auto\" --location=mbr --boot-drive=sda clearpart --none --initlabel part /boot/efi --fstype=\"efi\" --ondisk=sda --size=1024 part swap --fstype=\"swap\" --size=16384 part / --fstype=\"xfs\" --grow --size=102400 %pre parted -s /dev/sda mklabel gpt %end %addon com_redhat_kdump --disable --reserve-mb='auto' %end %packages @^minimal @core kexec-tools %end Cobbler Web https://192.168.152.101/cobbbler_web username: cobbler password: cobbler Note :Cobbler web can't work on python django editon newer than 1.8 Install Django 1.8.17 # rpm -e --nodeps python2-django # yum install python2-pip # pip install --upgrade pip # pip install Django==1.8.17 Boot file configuration UEFI BIOS boot file # cat /etc/cobbler/pxe/efidefault.template default=0 timeout=30 title local quit $grub_menu_items Legacy BIOS boot file # cat /etc/cobbler/pxe/pxedefault.template DEFAULT menu PROMPT 0 MENU TITLE Cobbler | http://cobbler.github.io/ TIMEOUT 200 TOTALTIMEOUT 6000 ONTIMEOUT $pxe_timeout_profile LABEL local MENU LABEL (local) MENU DEFAULT LOCALBOOT -1 $pxe_menu_items MENU end","title":"Cobbler"},{"location":"cobbler/#cobbler-reference-docs","text":"Rehat Documentation about Cobbler Centos kickstart introduction","title":"Cobbler Reference Docs"},{"location":"cobbler/#install-cobbler-on-centos-7","text":"Disable Firewall # systemctl stop firewalld # systemctl disable firewalld Disable SELinux # vi /etc/selinux/config SELINUX=disabled Install EPEL repository # rpm -ivh https://mirrors.aliyun.com/centos/7.6.1810/extras/x86_64/Packages/epel-release-7-11.noarch.rpm Install cobbler # yum install httpd tftp dhcp cobbler cobbler-web pykickstart xinetd -y # yum install debmirror.noarch -y Start service # systemctl start httpd # systemctl enable httpd # systemctl start cobblerd # systemctl enable cobblerd Run cobbler check # cobbler check # vi /etc/cobbler/settings server: 192.168.152.101 next_server: 192.168.152.101 # vim /etc/xinetd.d/tftp disable=no # vim /etc/cobbler/settings proxy_url_ext: http://172.16.2.199:80 # systemctl restart cobblerd # cobbler get-loaders --force Start rsync service # systemctl start rsyncd Modify default password # openssl passwd -1 -salt 'cobbler' 'cobbler' # vim /etc/cobbler/settings default_password_crypted Configure DHCP template # vim /etc/cobbler/settings manage_dhcp: 1 # vim /etc/cobbler/dhcp.template Rum cobbler sync # systemctl start xinetd # systemctl restart cobblerd # cobbler sync","title":"Install Cobbler on Centos 7"},{"location":"cobbler/#configure-os-image","text":"Import OS image file # mount /dev/cdrom /mnt # cobbler import --path=/mnt/ --name=CentOS-6.10-x86_64 --arch=x86_64 Custom kickstrat file # vi /var/lib/cobbler/kickstarts/centos7-x86_64.ks # cobbler profile edit --name=CentOS-7-x86_64 --kickstart=/var/lib/cobbler/kickstarts/centos7-x86_64.ks # cobbler sync View cobbler profile # cobbler profile list # cobbler profile report --name=CentOS-6.10-x86_64","title":"Configure os image"},{"location":"cobbler/#examples-of-kickstart-files","text":"Centos 7 on legacy bios # This kickstart file should only be used for installing CentOS 7. #platform=x86, AMD64, or Intel EM64T # System authorization information auth --useshadow --enablemd5 # System bootloader configuration bootloader --location=mbr # Partition clearing information clearpart --all --initlabel # Use text mode install text # Firewall configuration firewall --enabled # Run the Setup Agent on first boot firstboot --disable # System keyboard keyboard us # System language lang zh_CN.UTF-8 # Use network installation url --url=$tree # Network information $SNIPPET('network_config') # Reboot after installation reboot #Root password rootpw --iscrypted $default_password_crypted # SELinux configuration selinux --enforcing # Do not configure the X Window System skipx # System timezone timezone Asia/Shanghai # Install OS instead of upgrade install # Clear the Master Boot Record zerombr # Allow anaconda to partition the system as needed part /boot --fstype=ext4 --ondisk=sda --size=500 part swap --ondisk=sda --size=16384 part / --fstype=ext4 --ondisk=sda --grow --size=5000 %pre $SNIPPET('log_ks_pre') $SNIPPET('kickstart_start') $SNIPPET('pre_install_network_config') # Enable installation monitoring $SNIPPET('pre_anamon') %end %packages $SNIPPET('func_install_if_enabled') %end %addon com_redhat_kdump --disable --reserve-mb='auto' %end %post --nochroot $SNIPPET('log_ks_post_nochroot') %end %post $SNIPPET('log_ks_post') ---------- $SNIPPET('post_install_kernel_options') $SNIPPET('post_install_network_config') $SNIPPET('func_register_if_enabled') $SNIPPET('download_config_files') $SNIPPET('koan_environment') $SNIPPET('redhat_register') $SNIPPET('cobbler_register') # Enable post-install boot notification $SNIPPET('post_anamon') # Start final steps $SNIPPET('kickstart_done') # End final steps %end Centos 7 on uefi bios # This kickstart file should only be used for installing CentOS 7. #platform=x86, AMD64, or Intel EM64T auth --enableshadow --passalgo=sha512 url --url=$tree text firstboot --disable firewall --enabled ignoredisk --only-use=sda selinux --enforcing reboot keyboard us lang zh_CN.UTF-8 network --bootproto=dhcp --hostname=Centos7 --device=ens33 --activate rootpw --iscrypted $default_password_crypted timezone Asia/Shanghai bootloader --append=\" crashkernel=auto\" --location=mbr --boot-drive=sda clearpart --none --initlabel part /boot/efi --fstype=\"efi\" --ondisk=sda --size=1024 part swap --fstype=\"swap\" --size=16384 part / --fstype=\"xfs\" --grow --size=102400 %pre parted -s /dev/sda mklabel gpt %end %addon com_redhat_kdump --disable --reserve-mb='auto' %end %packages @^minimal @core kexec-tools %end","title":"Examples of kickstart files"},{"location":"cobbler/#cobbler-web","text":"https://192.168.152.101/cobbbler_web username: cobbler password: cobbler Note :Cobbler web can't work on python django editon newer than 1.8 Install Django 1.8.17 # rpm -e --nodeps python2-django # yum install python2-pip # pip install --upgrade pip # pip install Django==1.8.17","title":"Cobbler Web"},{"location":"cobbler/#boot-file-configuration","text":"UEFI BIOS boot file # cat /etc/cobbler/pxe/efidefault.template default=0 timeout=30 title local quit $grub_menu_items Legacy BIOS boot file # cat /etc/cobbler/pxe/pxedefault.template DEFAULT menu PROMPT 0 MENU TITLE Cobbler | http://cobbler.github.io/ TIMEOUT 200 TOTALTIMEOUT 6000 ONTIMEOUT $pxe_timeout_profile LABEL local MENU LABEL (local) MENU DEFAULT LOCALBOOT -1 $pxe_menu_items MENU end","title":"Boot file configuration"},{"location":"github/","text":"Git command usage Configure # git config --global user.name \"John Doe\" # git config --global user.email johndoe@example.com # git config -l Initializing a new repository # git init Check current status # git status Committing changes # git add -A # git commit -m \"description\" Push an existing repository # git remote add origin https://github.com/username/projectname.git # git push -u origin master","title":"Github"},{"location":"github/#git-command-usage","text":"Configure # git config --global user.name \"John Doe\" # git config --global user.email johndoe@example.com # git config -l Initializing a new repository # git init Check current status # git status Committing changes # git add -A # git commit -m \"description\" Push an existing repository # git remote add origin https://github.com/username/projectname.git # git push -u origin master","title":"Git command usage"},{"location":"mkdocs/","text":"For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Themes readthedocs material yeti amelia cyborg united flatly ivory","title":"Mkdocs"},{"location":"mkdocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"mkdocs/#themes","text":"readthedocs material yeti amelia cyborg united flatly ivory","title":"Themes"},{"location":"saltstack/","text":"Saltstack official documentation Table of contents Windows update module State modules Install saltstack Install saltstack master # yum install https://repo.saltstack.com/yum/redhat/salt-repo-latest.el7.noarch.rpm -y # yum install salt-master # systemctl start salt-master # systemctl enable salt-master # firewall-cmd --zone=public --add-port=4505-4506/tcp --permanent # firewall-cmd --reload # vi /etc/salt/master interface: 192.168.152.110 # systemctl restart salt-master Install saltstack minion on windows # .\\Salt-Minion-2019.2.0-Py2-AMD64-Setup.exe /S /master=192.168.152.110 /minion-name= Note :If the system is missing the appropriate version of the Visual C++ Redistributable (vcredist) the user will be prompted to install it. Install saltstack minion on centos # yum install https://repo.saltstack.com/yum/redhat/salt-repo-latest.el7.noarch.rpm -y # yum install salt-minion -y Using salt List all keys of minions # salt-key -L Accept a minion # salt-key -a minion-name Delete a minion # salt-key -d minion-name Test minion connection # salt \"minion-name\" test.ping List connected minions # salt-run manage.status # salt-run manage.versions # salt-run manage.up # salt-run manage.down Job manage # salt \"minion-name\" saltutil.running # salt \"minion-name\" saltutil.kill_job jid Update windows minion # salt \"minion-name\" win_wua.get KB4499164 install=true # salt \"minion-name\" win_wua.list categories=['Security Updates'] severities=['Critical'] install=True Reboot windows minion # salt \"minion-name\" system.reboot 5 True Shutdown windows minion # salt \"minion-name\" system.shutdown timeout=0 Enable/Disable windows remote desktop # salt \"minion-name\" cmd.run 'reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f' # salt \"minion-name\" cmd.run 'reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 1 /f' Manage windows users # salt \"minion-name\" user.list_users # salt \"minion-name\" user.setpassword user password Configure windows dns # salt \"minion-name\" win_dns_client.get_dns_config 'Local area connetion' # salt \"minion-name\" win_dns_client.add_dns 202.96.209.5 'Local area connetion' 1 Custom state modules - Install oracle jdk # vi /src/salt/modules/jdk/install.sls # salt \"minion-name\" state.sls modules.jdk.install {% set jdk_version = \"jdk1.8.0_201\" %} jdk-install: file.managed: - name: /usr/local/src/{{ jdk_version }}-linux-x64.tar.gz - source: salt://modules/packages/{{ jdk_version }}-linux-x64.tar.gz - user: root - group: root - mode: 755 cmd.run: - name: cd /usr/local/src && tar zxf {{ jdk_version }}-linux-x64.tar.gz && mv {{ jdk_version }} /usr/local/ && ln -s /usr/local/{{ jdk_version }} /usr/local/jdk - unless: test -d /usr/local/{{ jdk_version }} && test -L /usr/local/jdk - require: - file: jdk-install jdk-env: file.append: - name: /etc/profile - text: - export JAVA_HOME=/usr/local/jdk - export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar - export PATH=$PATH:$JAVA_HOME/bin - unless: test -n \"$JAVA_HOME\" cmd.run: - name: source /etc/profile - require: - file: jdk-env - Install tomcat # vi /src/salt/modules/tomcat/install.sls # salt \"minion-name\" state.sls modules.tomcat.install {% set tomcat_version = \"7.0.94\" %} tomcat-install: file.managed: - name: /usr/local/src/apache-tomcat-{{ tomcat_version }}.tar.gz - source: salt://modules/packages/apache-tomcat-{{ tomcat_version }}.tar.gz - user: root - group: root - mode: 755 cmd.run: - name: cd /usr/local/src && tar zxf apache-tomcat-{{ tomcat_version }}.tar.gz && mv apache-tomcat-{{ tomcat_version }} /usr/local/ && ln -s /usr/local/apache-tomcat-{{ tomcat_version }} /usr/local/tomcat - unless: test -d /usr/local/apache-tomcat-{{ tomcat_version }} && test -L /usr/local/tomcat - require: - file: tomcat-install - Install GCC # vi /src/salt/modules/pkg/make.sls # salt \"minion-name\" state.sls modules.pkg.make pkg-init: pkg.installed: - names: - gcc - gcc-c++ - openssl-devel - Install node.js # vi /src/salt/modules/node/install.sls # salt \"minion-name\" state.sls modules.node.install {% set node_version = \"v0.12.4\" %} include: - modules.pkg.make node-install: file.managed: - name: /usr/local/src/node-{{ node_version }}.tar.gz - source: salt://modules/packages/node-{{ node_version }}.tar.gz - user: root - group: root - mode: 755 cmd.run: - name: cd /usr/local/src && tar zxf node-{{ node_version }}.tar.gz && cd node-{{ node_version }} && ./configure --prefix=/usr/local/node && make && make install - unless: test -d /usr/local/node - require: - pkg: pkg-init - file: node-install node-env: file.append: - name: /etc/profile - text: - export NODE_HOME=/usr/local/node - export PATH=$NODE_HOME/bin:$PATH - export NODE_PATH=$NODE_HOME/lib/node_modules:$PATH - unless: test -n \"$NODE_HOME\" cmd.run: - name: source /etc/profile - require: - file: node-env install-express: cmd.run: - name: /usr/local/node/bin/npm install -g express-generator && /usr/local/node/bin/npm install -g express - unless: test -L /usr/local/node/bin/express - require: - cmd: node-install - cmd: node-env","title":"Saltstack"},{"location":"saltstack/#saltstack-official-documentation","text":"Table of contents Windows update module State modules","title":"Saltstack official documentation"},{"location":"saltstack/#install-saltstack","text":"Install saltstack master # yum install https://repo.saltstack.com/yum/redhat/salt-repo-latest.el7.noarch.rpm -y # yum install salt-master # systemctl start salt-master # systemctl enable salt-master # firewall-cmd --zone=public --add-port=4505-4506/tcp --permanent # firewall-cmd --reload # vi /etc/salt/master interface: 192.168.152.110 # systemctl restart salt-master Install saltstack minion on windows # .\\Salt-Minion-2019.2.0-Py2-AMD64-Setup.exe /S /master=192.168.152.110 /minion-name= Note :If the system is missing the appropriate version of the Visual C++ Redistributable (vcredist) the user will be prompted to install it. Install saltstack minion on centos # yum install https://repo.saltstack.com/yum/redhat/salt-repo-latest.el7.noarch.rpm -y # yum install salt-minion -y","title":"Install saltstack"},{"location":"saltstack/#using-salt","text":"List all keys of minions # salt-key -L Accept a minion # salt-key -a minion-name Delete a minion # salt-key -d minion-name Test minion connection # salt \"minion-name\" test.ping List connected minions # salt-run manage.status # salt-run manage.versions # salt-run manage.up # salt-run manage.down Job manage # salt \"minion-name\" saltutil.running # salt \"minion-name\" saltutil.kill_job jid Update windows minion # salt \"minion-name\" win_wua.get KB4499164 install=true # salt \"minion-name\" win_wua.list categories=['Security Updates'] severities=['Critical'] install=True Reboot windows minion # salt \"minion-name\" system.reboot 5 True Shutdown windows minion # salt \"minion-name\" system.shutdown timeout=0 Enable/Disable windows remote desktop # salt \"minion-name\" cmd.run 'reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f' # salt \"minion-name\" cmd.run 'reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 1 /f' Manage windows users # salt \"minion-name\" user.list_users # salt \"minion-name\" user.setpassword user password Configure windows dns # salt \"minion-name\" win_dns_client.get_dns_config 'Local area connetion' # salt \"minion-name\" win_dns_client.add_dns 202.96.209.5 'Local area connetion' 1","title":"Using salt"},{"location":"saltstack/#custom-state-modules","text":"","title":"Custom state modules"},{"location":"saltstack/#-install-oracle-jdk","text":"# vi /src/salt/modules/jdk/install.sls # salt \"minion-name\" state.sls modules.jdk.install {% set jdk_version = \"jdk1.8.0_201\" %} jdk-install: file.managed: - name: /usr/local/src/{{ jdk_version }}-linux-x64.tar.gz - source: salt://modules/packages/{{ jdk_version }}-linux-x64.tar.gz - user: root - group: root - mode: 755 cmd.run: - name: cd /usr/local/src && tar zxf {{ jdk_version }}-linux-x64.tar.gz && mv {{ jdk_version }} /usr/local/ && ln -s /usr/local/{{ jdk_version }} /usr/local/jdk - unless: test -d /usr/local/{{ jdk_version }} && test -L /usr/local/jdk - require: - file: jdk-install jdk-env: file.append: - name: /etc/profile - text: - export JAVA_HOME=/usr/local/jdk - export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar - export PATH=$PATH:$JAVA_HOME/bin - unless: test -n \"$JAVA_HOME\" cmd.run: - name: source /etc/profile - require: - file: jdk-env","title":"- Install oracle jdk"},{"location":"saltstack/#-install-tomcat","text":"# vi /src/salt/modules/tomcat/install.sls # salt \"minion-name\" state.sls modules.tomcat.install {% set tomcat_version = \"7.0.94\" %} tomcat-install: file.managed: - name: /usr/local/src/apache-tomcat-{{ tomcat_version }}.tar.gz - source: salt://modules/packages/apache-tomcat-{{ tomcat_version }}.tar.gz - user: root - group: root - mode: 755 cmd.run: - name: cd /usr/local/src && tar zxf apache-tomcat-{{ tomcat_version }}.tar.gz && mv apache-tomcat-{{ tomcat_version }} /usr/local/ && ln -s /usr/local/apache-tomcat-{{ tomcat_version }} /usr/local/tomcat - unless: test -d /usr/local/apache-tomcat-{{ tomcat_version }} && test -L /usr/local/tomcat - require: - file: tomcat-install","title":"- Install tomcat"},{"location":"saltstack/#-install-gcc","text":"# vi /src/salt/modules/pkg/make.sls # salt \"minion-name\" state.sls modules.pkg.make pkg-init: pkg.installed: - names: - gcc - gcc-c++ - openssl-devel","title":"- Install GCC"},{"location":"saltstack/#-install-nodejs","text":"# vi /src/salt/modules/node/install.sls # salt \"minion-name\" state.sls modules.node.install {% set node_version = \"v0.12.4\" %} include: - modules.pkg.make node-install: file.managed: - name: /usr/local/src/node-{{ node_version }}.tar.gz - source: salt://modules/packages/node-{{ node_version }}.tar.gz - user: root - group: root - mode: 755 cmd.run: - name: cd /usr/local/src && tar zxf node-{{ node_version }}.tar.gz && cd node-{{ node_version }} && ./configure --prefix=/usr/local/node && make && make install - unless: test -d /usr/local/node - require: - pkg: pkg-init - file: node-install node-env: file.append: - name: /etc/profile - text: - export NODE_HOME=/usr/local/node - export PATH=$NODE_HOME/bin:$PATH - export NODE_PATH=$NODE_HOME/lib/node_modules:$PATH - unless: test -n \"$NODE_HOME\" cmd.run: - name: source /etc/profile - require: - file: node-env install-express: cmd.run: - name: /usr/local/node/bin/npm install -g express-generator && /usr/local/node/bin/npm install -g express - unless: test -L /usr/local/node/bin/express - require: - cmd: node-install - cmd: node-env","title":"- Install node.js"},{"location":"shellscripts/","text":"Copy SQL Server backup files #!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH count=`df -h | grep $2 | wc -l` remotedir=/mnt/smb-$2 localdir=/home/data/$2-bak if [ $count -eq 0 ]; then mount -t cifs //\"$1\" $remotedir -o username=username,password=password,codepage=cp936 &> /dev/null if [ $? -ne 0 ]; then echo \"failed to connect $2 sql server\" > /home/scripts/logs/$2_`date +%Y%m%d`.log exit 1 fi fi find $remotedir -type f -mmin -250 -exec cp {} $localdir \\; umount $remotedir exit 0 Delete Xinmin newsletter delivery temp files #!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH today=`date +%Y%m%d` delday=`date -d \"40 days ago\" +%Y%m%d` logdir1=/opt/scripts/logs/xmdelivery/$today.log logdir2=/opt/scripts/logs/xmdelivery/\"$today\"_error.log xmdir=/mnt/xmdelivery count=`df -h | grep xmdelivery | wc -l` if [ $count -eq 0 ]; then mount -t cifs //172.17.107.110/data $xmdir -o username=username,password=password,codepage=cp936 2>> $logdir2 if [ $? -ne 0 ]; then echo \"\u65e0\u6cd5\u8bbf\u95ee\u5206\u7a3f\u670d\u52a1\u5668\" >> $logdir2 exit 1 fi fi dir1=(\u65b0\u534e\u793e\u56fe\u7247 \u65b0\u534e\u793e\u6587\u5b57) dir2=(entity name name_bak) for(( i=0; i<2; i++ )) do for(( j=0; j<3; j++ )) do rm -rvf $xmdir/${dir1[i]}/${dir2[j]}/$delday >> $logdir1 2>> $logdir2 done done umount $xmdir if [ ! -s $logdir2 ]; then rm -f $logdir2 fi exit 0 Delete Wenhui newsletter delivery temp files #!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH today=`date +%Y%m%d` logdir1=/opt/scripts/logs/whdelivery/$today.log logdir2=/opt/scripts/logs/whdelivery/\"$today\"_error.log whdir=/mnt/whdelivery delday=`date -d \"37 days ago\" +%Y%m%d` count=`df -h | grep whdelivery | wc -l` if [ $count -eq 0 ]; then mount -t cifs //172.17.107.106/data $whdir -o username=username,password=password,codepage=cp936 2>> $logdir2 if [ $? -ne 0 ]; then echo \"\u65e0\u6cd5\u8bbf\u95ee\u5206\u7a3f\u670d\u52a1\u5668\" >> $logdir2 exit 1 fi fi dir1=(photo text) dir2=(entity name name_bak) for(( i=0; i<2; i++ )) do for(( j=0; j<3; j++ )) do rm -rvf $whdir/${dir1[i]}/${dir2[j]}/$delday >> $logdir1 2>> $logdir2 done done umount $whdir if [ ! -s $logdir2 ]; then rm -f $logdir2 fi exit 0 Delete Xinmin FTP history files #!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH abroad_catalog=(shangbao \u5965\u5730\u5229\u5965\u534e\u603b\u4f1a \u5e03\u8fbe\u4f69\u65af\u5468\u62a5 \u52a0\u897f\u5468\u672b \u6377\u514b\u534e\u5546\u5bfc\u62a5 \u6b27\u534e\u62a5 \u8461\u534e\u62a5 \u5e0c\u814a\u4e2d\u5e0c\u65f6\u62a5 \u65b0\u6c11\u7f8e\u56fd \u65b0\u897f\u5170\u4fe1\u62a5 \\ \u7231\u534e\u6742\u5fd7\\(\u65e5\u672c\u7248\\) \u6fb3\u5927\u5229\u4e9a\u534e\u590f\u5468\u62a5 \u534e\u4fa8\u65b0\u5929\u5730\\(\u8377\u5170\\) \u52a0\u4e2d\u65f6\u62a5 \u62c9\u7f8e\u4fa8\u58f0 \u6b27\u6d32\u8054\u5408\u5468\u62a5 \u6cf0\u56fd\u661f\u66b9\u65e5\u62a5 \u897f\u975e\u7edf\u4e00\u5546\u62a5 \u65b0\u6b27\u4fa8\u62a5 \u5370\u5c3c\u8baf\u62a5 \\ \u5317\u6b27\u65f6\u62a5 \u534e\u76db\u987f\u4e2d\u6587\u90ae\u62a5) count=`df -h | grep hwb | wc -l` today=`date +%Y%m%d` logdir1=/opt/scripts/logs/ftp_hwb/$today.log logdir2=/opt/scripts/logs/ftp_hwb/\"$today\"_error.log ftpdir=/mnt/ftp_hwb if [ $count -eq 0 ]; then curlftpfs -o codepage=GBK ftp://username:password@serverip:port $ftpdir 2>> $logdir2 if [ $? -ne 0 ]; then echo \"cannot visit ftpserver\" >> $logdir2 exit 1 fi fi for((i=0;i<22;i++)) do find $ftpdir/${abroad_catalog[i]} -type d -mtime +249 | xargs rm -rvf >> $logdir1 done umount $ftpdir if [ ! -s $logdir2 ]; then rm -f $logdir2 fi exit 0 Delete Press FTP history files #!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH today=`date +%Y%m%d` logdir1=/opt/scripts/logs/ftp_gn/$today.log logdir2=/opt/scripts/logs/ftp_gn/\"$today\"_error.log ftpdir=/mnt/ftp_gn date1=`date -d \"85 days ago\" +%Y%m%d` date2=`date -d \"145 days ago\" +%Y%m%d` count=`df -h | grep gn | wc -l` if [ $count -eq 0 ]; then curlftpfs -o codepage=GBK ftp://username:password@serverip:port $ftpdir 2>> $logdir2 if [ $? -ne 0 ]; then echo \"\u65e0\u6cd5\u8bbf\u95eeFTP\u670d\u52a1\u5668\" >> $logdir2 exit 1 fi fi rm -rvf $ftpdir/\u6167\u79d1\u8baf\u4e1a/whb/wh$date1 >> $logdir1 2>> $logdir2 rm -rvf $ftpdir/\u6167\u79d1\u8baf\u4e1a/xmwb/xm$date1 >> $logdir1 2>> $logdir2 rm -rvf $ftpdir/xmwb/\u4e0a\u6d77\u5730\u533a\u7248/$date2 >> $logdir1 2>> $logdir2 rm -rvf $ftpdir/xmwb/\u5916\u5730\u7248/$date2 >> $logdir1 2>> $logdir2 rm -rvf $ftpdir/whb/wh$date2 >> $logdir1 2>> $logdir2 rm -rvf $ftpdir/whb/\u4e0a\u6d77\u5730\u533a\u7248/wh$date2 >> $logdir1 2>> $logdir2 umount $ftpdir if [ ! -s $logdir2 ];then rm -f $logdir2 fi exit 0 Delete Press FTP history files(Xinmin Weekly) #!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH ftpdir=/mnt/ftp_xmzk today=`date +%Y%m%d` logdir1=/opt/scripts/logs/ftp_xmzk/$today.log logdir2=/opt/scripts/logs/ftp_xmzk/\"$today\"_error.log count=`df -h | grep xmzk | wc -l` if [ $count -eq 0 ]; then curlftpfs -o codepage=GBK ftp://username:password@serverip:port $ftpdir 2>> $logdir2 if [ $? -ne 0 ]; then echo \"cannot visit ftp server\" >> $logdir2 exit 1 fi fi find $ftpdir/xmzkr -type d -name \"*\u7b2c??\u671f*\" -mtime +251 | xargs rm -rvf >> $logdir1 find $ftpdir/xmzkr/\u65b0\u6c11\u5468\u520a\u5f80\u671f\u7535\u5b50\u5c0f\u6587\u4ef6 -type f -mtime +591 -exec rm -rvf {} \\;>> $logdir1 2>> $logdir2 umount $ftpdir if [ ! -s $logdir2 ]; then rm -f $logdir2 fi exit 0 Backup history press files #!/bin/bash copydir=(ARTICLE COMPOSE LIBRARY) copyyear=`date -d \"11 months ago\" +%Y` copymonth=`date -d \"11 months ago\" +%Y%m`* case \"$1\" in \"WHB\") copypaper=\"wh\" server=\"172.17.107.88\" ;; \"XMWB\") copypaper=\"xm\" server=\"172.17.107.91\" ;; \"WXB\") copypaper=\"wx\" server=\"172.17.107.88\" ;; \"DSZB\") copypaper=\"ds\" server=\"172.17.107.88\" ;; *) echo \"Please input WHB/XMWB/WXB/DSZB\" exit 1 ;; esac function mounts() { count=`df -h | grep \"$1\" | wc -l` if [ $count -eq 0 ]; then mount -t cifs //\"$2\" /mnt/\"$1\" -o username=\"$3\",password=\"$4\",codepage=cp936 if [ $? -ne 0 ]; then echo \"failed to connet $2\" > /home/scripts/logs/$1_`date +%Y%m%d`.log exit 1 fi fi } mounts \"$copypaper\" \"$server/fzpaper\" \"username\" \"password\" mounts \"share1\" \"172.17.107.176/share1\" \"username\" \"password\" if [ ! -d \"/mnt/share1/$copypaper$copyyear\" ]; then mkdir /mnt/share1/$copypaper$copyyear for((i=0; i<3; i++)) do mkdir /mnt/share1/$copypaper$copyyear/${copydir[i]} done fi for((i=0; i<3; i++)) do cp -r /mnt/$copypaper/$1/${copydir[i]}/$copymonth /mnt/share1/$copypaper$copyyear/${copydir[i]} done umount /mnt/$copypaper umount /mnt/share1 exit 0 SOAP wsdl web service #!/bin/bash cityname=$1 cat > /tmp/request.xml << EOF <?xml version=\"1.0\" encoding=\"utf-8\"?> <soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"> <soap:Body> <getWeatherbyCityName xmlns=\"http://WebXml.com.cn/\"> <theCityName>$cityname</theCityName> </getWeatherbyCityName> </soap:Body> </soap:Envelope> EOF curl -s -H \"Content-Type: text/xml; charset=utf-8\" \\ -H 'SOAPAction: \"http://WebXml.com.cn/getWeatherbyCityName\"' \\ -d @/tmp/request.xml \\ -X POST http://www.webxml.com.cn/WebServices/WeatherWebService.asmx \\ > /tmp/weatherapi.log exit 0 Check newsletters by xinhua news agency #!/bin/bash PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH today=`date +%Y%m%d` case \"$1\" in \"107\") server=\"172.25.52.107\" ;; \"106\") server=\"172.25.56.106\" ;; \"xm\") server=\"172.17.107.110\" ;; \"wh\") server=\"172.17.107.106\" ;; *) echo \"-2\" exit 1 ;; esac local=/mnt/xhs_\"$1\" chkconn=`df -h | grep \"$local\" | wc -l` if [ $chkconn -eq 0 ]; then mount -t cifs //\"$server\"/data \"$local\" -o username=username,password=password,codepage=cp936 &> /dev/null if [ $? -ne 0 ]; then echo \"-1\" exit 1 fi fi if [ \"$2\" == \"num_photo\" ]; then dir=\"$local/cnml/input/photo/$today\" if [ -d $dir ]; then count=`ls -l \"$local\"/cnml/input/photo/\"$today\" | grep \"^-.*[jpg|JPG|cdr|ai]$\" | wc -l` echo \"$count\" umount \"$local\" exit 0 else echo \"0\" umount \"$local\" exit 0 fi fi case \"$server\" in 172.25.56.106|172.25.52.107) dir=\"$local/cnml/input/$2\" ;; 172.17.107.110|172.17.107.106) dir=\"$local/$2/name_bak\" ;; *) echo \"-3\" exit 1 ;; esac if [ -d \"$dir\"/\"$today\" ]; then count=`ls -l \"$dir\"/\"$today\" | grep \"^-.*xml$\" | wc -l` echo \"$count\" umount \"$local\" exit 0 else echo \"0\" umount \"$local\" exit 0 fi Create folder by date #!/bin/bash #Create directory by date DATE=$(date +%Y%m%d) DIR_PRI=\"/home/pic/primary/$DATE\" DIR_SEC=\"/home/pic/secondary/$DATE\" create_folder(){ FOLDER=$1 if [ ! -d $FOLDER ]; then mkdir $FOLDER fi } create_folder $DIR_PRI create_folder $DIR_SEC exit 0","title":"Shellscripts"},{"location":"shellscripts/#copy-sql-server-backup-files","text":"#!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH count=`df -h | grep $2 | wc -l` remotedir=/mnt/smb-$2 localdir=/home/data/$2-bak if [ $count -eq 0 ]; then mount -t cifs //\"$1\" $remotedir -o username=username,password=password,codepage=cp936 &> /dev/null if [ $? -ne 0 ]; then echo \"failed to connect $2 sql server\" > /home/scripts/logs/$2_`date +%Y%m%d`.log exit 1 fi fi find $remotedir -type f -mmin -250 -exec cp {} $localdir \\; umount $remotedir exit 0","title":"Copy SQL Server backup files"},{"location":"shellscripts/#delete-xinmin-newsletter-delivery-temp-files","text":"#!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH today=`date +%Y%m%d` delday=`date -d \"40 days ago\" +%Y%m%d` logdir1=/opt/scripts/logs/xmdelivery/$today.log logdir2=/opt/scripts/logs/xmdelivery/\"$today\"_error.log xmdir=/mnt/xmdelivery count=`df -h | grep xmdelivery | wc -l` if [ $count -eq 0 ]; then mount -t cifs //172.17.107.110/data $xmdir -o username=username,password=password,codepage=cp936 2>> $logdir2 if [ $? -ne 0 ]; then echo \"\u65e0\u6cd5\u8bbf\u95ee\u5206\u7a3f\u670d\u52a1\u5668\" >> $logdir2 exit 1 fi fi dir1=(\u65b0\u534e\u793e\u56fe\u7247 \u65b0\u534e\u793e\u6587\u5b57) dir2=(entity name name_bak) for(( i=0; i<2; i++ )) do for(( j=0; j<3; j++ )) do rm -rvf $xmdir/${dir1[i]}/${dir2[j]}/$delday >> $logdir1 2>> $logdir2 done done umount $xmdir if [ ! -s $logdir2 ]; then rm -f $logdir2 fi exit 0","title":"Delete Xinmin newsletter delivery temp files"},{"location":"shellscripts/#delete-wenhui-newsletter-delivery-temp-files","text":"#!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH today=`date +%Y%m%d` logdir1=/opt/scripts/logs/whdelivery/$today.log logdir2=/opt/scripts/logs/whdelivery/\"$today\"_error.log whdir=/mnt/whdelivery delday=`date -d \"37 days ago\" +%Y%m%d` count=`df -h | grep whdelivery | wc -l` if [ $count -eq 0 ]; then mount -t cifs //172.17.107.106/data $whdir -o username=username,password=password,codepage=cp936 2>> $logdir2 if [ $? -ne 0 ]; then echo \"\u65e0\u6cd5\u8bbf\u95ee\u5206\u7a3f\u670d\u52a1\u5668\" >> $logdir2 exit 1 fi fi dir1=(photo text) dir2=(entity name name_bak) for(( i=0; i<2; i++ )) do for(( j=0; j<3; j++ )) do rm -rvf $whdir/${dir1[i]}/${dir2[j]}/$delday >> $logdir1 2>> $logdir2 done done umount $whdir if [ ! -s $logdir2 ]; then rm -f $logdir2 fi exit 0","title":"Delete Wenhui newsletter delivery temp files"},{"location":"shellscripts/#delete-xinmin-ftp-history-files","text":"#!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH abroad_catalog=(shangbao \u5965\u5730\u5229\u5965\u534e\u603b\u4f1a \u5e03\u8fbe\u4f69\u65af\u5468\u62a5 \u52a0\u897f\u5468\u672b \u6377\u514b\u534e\u5546\u5bfc\u62a5 \u6b27\u534e\u62a5 \u8461\u534e\u62a5 \u5e0c\u814a\u4e2d\u5e0c\u65f6\u62a5 \u65b0\u6c11\u7f8e\u56fd \u65b0\u897f\u5170\u4fe1\u62a5 \\ \u7231\u534e\u6742\u5fd7\\(\u65e5\u672c\u7248\\) \u6fb3\u5927\u5229\u4e9a\u534e\u590f\u5468\u62a5 \u534e\u4fa8\u65b0\u5929\u5730\\(\u8377\u5170\\) \u52a0\u4e2d\u65f6\u62a5 \u62c9\u7f8e\u4fa8\u58f0 \u6b27\u6d32\u8054\u5408\u5468\u62a5 \u6cf0\u56fd\u661f\u66b9\u65e5\u62a5 \u897f\u975e\u7edf\u4e00\u5546\u62a5 \u65b0\u6b27\u4fa8\u62a5 \u5370\u5c3c\u8baf\u62a5 \\ \u5317\u6b27\u65f6\u62a5 \u534e\u76db\u987f\u4e2d\u6587\u90ae\u62a5) count=`df -h | grep hwb | wc -l` today=`date +%Y%m%d` logdir1=/opt/scripts/logs/ftp_hwb/$today.log logdir2=/opt/scripts/logs/ftp_hwb/\"$today\"_error.log ftpdir=/mnt/ftp_hwb if [ $count -eq 0 ]; then curlftpfs -o codepage=GBK ftp://username:password@serverip:port $ftpdir 2>> $logdir2 if [ $? -ne 0 ]; then echo \"cannot visit ftpserver\" >> $logdir2 exit 1 fi fi for((i=0;i<22;i++)) do find $ftpdir/${abroad_catalog[i]} -type d -mtime +249 | xargs rm -rvf >> $logdir1 done umount $ftpdir if [ ! -s $logdir2 ]; then rm -f $logdir2 fi exit 0","title":"Delete Xinmin FTP history files"},{"location":"shellscripts/#delete-press-ftp-history-files","text":"#!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH today=`date +%Y%m%d` logdir1=/opt/scripts/logs/ftp_gn/$today.log logdir2=/opt/scripts/logs/ftp_gn/\"$today\"_error.log ftpdir=/mnt/ftp_gn date1=`date -d \"85 days ago\" +%Y%m%d` date2=`date -d \"145 days ago\" +%Y%m%d` count=`df -h | grep gn | wc -l` if [ $count -eq 0 ]; then curlftpfs -o codepage=GBK ftp://username:password@serverip:port $ftpdir 2>> $logdir2 if [ $? -ne 0 ]; then echo \"\u65e0\u6cd5\u8bbf\u95eeFTP\u670d\u52a1\u5668\" >> $logdir2 exit 1 fi fi rm -rvf $ftpdir/\u6167\u79d1\u8baf\u4e1a/whb/wh$date1 >> $logdir1 2>> $logdir2 rm -rvf $ftpdir/\u6167\u79d1\u8baf\u4e1a/xmwb/xm$date1 >> $logdir1 2>> $logdir2 rm -rvf $ftpdir/xmwb/\u4e0a\u6d77\u5730\u533a\u7248/$date2 >> $logdir1 2>> $logdir2 rm -rvf $ftpdir/xmwb/\u5916\u5730\u7248/$date2 >> $logdir1 2>> $logdir2 rm -rvf $ftpdir/whb/wh$date2 >> $logdir1 2>> $logdir2 rm -rvf $ftpdir/whb/\u4e0a\u6d77\u5730\u533a\u7248/wh$date2 >> $logdir1 2>> $logdir2 umount $ftpdir if [ ! -s $logdir2 ];then rm -f $logdir2 fi exit 0","title":"Delete Press FTP history files"},{"location":"shellscripts/#delete-press-ftp-history-filesxinmin-weekly","text":"#!/bin/bash PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH ftpdir=/mnt/ftp_xmzk today=`date +%Y%m%d` logdir1=/opt/scripts/logs/ftp_xmzk/$today.log logdir2=/opt/scripts/logs/ftp_xmzk/\"$today\"_error.log count=`df -h | grep xmzk | wc -l` if [ $count -eq 0 ]; then curlftpfs -o codepage=GBK ftp://username:password@serverip:port $ftpdir 2>> $logdir2 if [ $? -ne 0 ]; then echo \"cannot visit ftp server\" >> $logdir2 exit 1 fi fi find $ftpdir/xmzkr -type d -name \"*\u7b2c??\u671f*\" -mtime +251 | xargs rm -rvf >> $logdir1 find $ftpdir/xmzkr/\u65b0\u6c11\u5468\u520a\u5f80\u671f\u7535\u5b50\u5c0f\u6587\u4ef6 -type f -mtime +591 -exec rm -rvf {} \\;>> $logdir1 2>> $logdir2 umount $ftpdir if [ ! -s $logdir2 ]; then rm -f $logdir2 fi exit 0","title":"Delete Press FTP history files(Xinmin Weekly)"},{"location":"shellscripts/#backup-history-press-files","text":"#!/bin/bash copydir=(ARTICLE COMPOSE LIBRARY) copyyear=`date -d \"11 months ago\" +%Y` copymonth=`date -d \"11 months ago\" +%Y%m`* case \"$1\" in \"WHB\") copypaper=\"wh\" server=\"172.17.107.88\" ;; \"XMWB\") copypaper=\"xm\" server=\"172.17.107.91\" ;; \"WXB\") copypaper=\"wx\" server=\"172.17.107.88\" ;; \"DSZB\") copypaper=\"ds\" server=\"172.17.107.88\" ;; *) echo \"Please input WHB/XMWB/WXB/DSZB\" exit 1 ;; esac function mounts() { count=`df -h | grep \"$1\" | wc -l` if [ $count -eq 0 ]; then mount -t cifs //\"$2\" /mnt/\"$1\" -o username=\"$3\",password=\"$4\",codepage=cp936 if [ $? -ne 0 ]; then echo \"failed to connet $2\" > /home/scripts/logs/$1_`date +%Y%m%d`.log exit 1 fi fi } mounts \"$copypaper\" \"$server/fzpaper\" \"username\" \"password\" mounts \"share1\" \"172.17.107.176/share1\" \"username\" \"password\" if [ ! -d \"/mnt/share1/$copypaper$copyyear\" ]; then mkdir /mnt/share1/$copypaper$copyyear for((i=0; i<3; i++)) do mkdir /mnt/share1/$copypaper$copyyear/${copydir[i]} done fi for((i=0; i<3; i++)) do cp -r /mnt/$copypaper/$1/${copydir[i]}/$copymonth /mnt/share1/$copypaper$copyyear/${copydir[i]} done umount /mnt/$copypaper umount /mnt/share1 exit 0","title":"Backup history press files"},{"location":"shellscripts/#soap-wsdl-web-service","text":"#!/bin/bash cityname=$1 cat > /tmp/request.xml << EOF <?xml version=\"1.0\" encoding=\"utf-8\"?> <soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"> <soap:Body> <getWeatherbyCityName xmlns=\"http://WebXml.com.cn/\"> <theCityName>$cityname</theCityName> </getWeatherbyCityName> </soap:Body> </soap:Envelope> EOF curl -s -H \"Content-Type: text/xml; charset=utf-8\" \\ -H 'SOAPAction: \"http://WebXml.com.cn/getWeatherbyCityName\"' \\ -d @/tmp/request.xml \\ -X POST http://www.webxml.com.cn/WebServices/WeatherWebService.asmx \\ > /tmp/weatherapi.log exit 0","title":"SOAP wsdl web service"},{"location":"shellscripts/#check-newsletters-by-xinhua-news-agency","text":"#!/bin/bash PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin export PATH today=`date +%Y%m%d` case \"$1\" in \"107\") server=\"172.25.52.107\" ;; \"106\") server=\"172.25.56.106\" ;; \"xm\") server=\"172.17.107.110\" ;; \"wh\") server=\"172.17.107.106\" ;; *) echo \"-2\" exit 1 ;; esac local=/mnt/xhs_\"$1\" chkconn=`df -h | grep \"$local\" | wc -l` if [ $chkconn -eq 0 ]; then mount -t cifs //\"$server\"/data \"$local\" -o username=username,password=password,codepage=cp936 &> /dev/null if [ $? -ne 0 ]; then echo \"-1\" exit 1 fi fi if [ \"$2\" == \"num_photo\" ]; then dir=\"$local/cnml/input/photo/$today\" if [ -d $dir ]; then count=`ls -l \"$local\"/cnml/input/photo/\"$today\" | grep \"^-.*[jpg|JPG|cdr|ai]$\" | wc -l` echo \"$count\" umount \"$local\" exit 0 else echo \"0\" umount \"$local\" exit 0 fi fi case \"$server\" in 172.25.56.106|172.25.52.107) dir=\"$local/cnml/input/$2\" ;; 172.17.107.110|172.17.107.106) dir=\"$local/$2/name_bak\" ;; *) echo \"-3\" exit 1 ;; esac if [ -d \"$dir\"/\"$today\" ]; then count=`ls -l \"$dir\"/\"$today\" | grep \"^-.*xml$\" | wc -l` echo \"$count\" umount \"$local\" exit 0 else echo \"0\" umount \"$local\" exit 0 fi","title":"Check newsletters by xinhua news agency"},{"location":"shellscripts/#create-folder-by-date","text":"#!/bin/bash #Create directory by date DATE=$(date +%Y%m%d) DIR_PRI=\"/home/pic/primary/$DATE\" DIR_SEC=\"/home/pic/secondary/$DATE\" create_folder(){ FOLDER=$1 if [ ! -d $FOLDER ]; then mkdir $FOLDER fi } create_folder $DIR_PRI create_folder $DIR_SEC exit 0","title":"Create folder by date"},{"location":"sqlserver/","text":"Create Ufida HR database use master; create database byjthr on primary (name='JFHR',filename='D:\\HR\\byjthr.mdf',filegrowth=1mb), filegroup ncc_data01 (name='ncc_data01',filename='D:\\HR\\ncc_data01.ndf',filegrowth=1mb), filegroup ncc_data02 (name='ncc_data02',filename='D:\\HR\\ncc_data02.ndf',filegrowth=1mb), filegroup ncc_data03 (name='ncc_data03',filename='D:\\HR\\ncc_data03.ndf',filegrowth=1mb), filegroup ncc_index01 (name='ncc_index01',filename='D:\\HR\\ncc_index01.ndf',filegrowth=1mb), filegroup ncc_index02 (name='ncc_index02',filename='D:\\HR\\ncc_index02.ndf',filegrowth=1mb), filegroup ncc_index03 (name='ncc_index03',filename='D:\\HR\\ncc_index03.ndf',filegrowth=1mb) log on (name='JFHR_log',filename='D:\\HR\\byjthr.ldf',filegrowth=10%); Create Founder newsedit database use master; create database newseditv2 on primary (name='newseditv2',filename='D:\\XMNEWSEDIT\\newseditv2.mdf',filegrowth=1mb) log on (name='newseditv2_log',filename='D:\\XMNEWSEDIT\\newseditv2.ldf',filegrowth=10%); Restore Founder newsedit database use master restore database newseditv2 from disk='D:\\SQL BACKUP\\newseditv2_backup_2018_11_05_040002_1585714.bak' with replace,norecovery restore database newseditv2 from disk='D:\\SQL BACKUP\\newseditv2_backup_2018_11_05_160001_7388475.bak' with recovery go SQL Server 2005 restore master database 1.Stop sql server services net stop mssqlserver 2.Start sql server in single-user mode cd c:\\Program Files\\Microsoft SQL Server\\MSSQL.1\\MSSQL\\Binn sqlservr.exe -c -m 3.Open ssms and disconnect server,then new query USE master GO RESTORE DATABASE master FROM Disk='C:\\Program Files\\Microsoft SQL Server\\MSSQL.1\\MSSQL\\Backup\\master.bak' WITH REPLACE 4.Restart sql server service Note :If the master database restored on another server,the sql server installation directory cannot be changed. Clear the transation log SQL SERVER 2000 backup LOG xmgga with NO_LOG GO dbcc shrinkdatabase (xmgga ,10) GO SQL SERVER 2008 -- BACKUP log newseditv2 with no_log USE newseditv2; GO -- Truncate the log by changing the database recovery model to SIMPLE ALTER DATABASE newseditv2 SET RECOVERY SIMPLE; GO -- Shrink the trun cated log file to 1 MB. DBCC SHRINKFILE (newseditv2_Log, 1); GO -- Reset the database recovery model ALTER DATABASE newseditv2 SET RECOVERY FULL; GO","title":"Sqlserver"},{"location":"sqlserver/#create-ufida-hr-database","text":"use master; create database byjthr on primary (name='JFHR',filename='D:\\HR\\byjthr.mdf',filegrowth=1mb), filegroup ncc_data01 (name='ncc_data01',filename='D:\\HR\\ncc_data01.ndf',filegrowth=1mb), filegroup ncc_data02 (name='ncc_data02',filename='D:\\HR\\ncc_data02.ndf',filegrowth=1mb), filegroup ncc_data03 (name='ncc_data03',filename='D:\\HR\\ncc_data03.ndf',filegrowth=1mb), filegroup ncc_index01 (name='ncc_index01',filename='D:\\HR\\ncc_index01.ndf',filegrowth=1mb), filegroup ncc_index02 (name='ncc_index02',filename='D:\\HR\\ncc_index02.ndf',filegrowth=1mb), filegroup ncc_index03 (name='ncc_index03',filename='D:\\HR\\ncc_index03.ndf',filegrowth=1mb) log on (name='JFHR_log',filename='D:\\HR\\byjthr.ldf',filegrowth=10%);","title":"Create Ufida HR database"},{"location":"sqlserver/#create-founder-newsedit-database","text":"use master; create database newseditv2 on primary (name='newseditv2',filename='D:\\XMNEWSEDIT\\newseditv2.mdf',filegrowth=1mb) log on (name='newseditv2_log',filename='D:\\XMNEWSEDIT\\newseditv2.ldf',filegrowth=10%);","title":"Create Founder newsedit database"},{"location":"sqlserver/#restore-founder-newsedit-database","text":"use master restore database newseditv2 from disk='D:\\SQL BACKUP\\newseditv2_backup_2018_11_05_040002_1585714.bak' with replace,norecovery restore database newseditv2 from disk='D:\\SQL BACKUP\\newseditv2_backup_2018_11_05_160001_7388475.bak' with recovery go","title":"Restore Founder newsedit database"},{"location":"sqlserver/#sql-server-2005-restore-master-database","text":"1.Stop sql server services net stop mssqlserver 2.Start sql server in single-user mode cd c:\\Program Files\\Microsoft SQL Server\\MSSQL.1\\MSSQL\\Binn sqlservr.exe -c -m 3.Open ssms and disconnect server,then new query USE master GO RESTORE DATABASE master FROM Disk='C:\\Program Files\\Microsoft SQL Server\\MSSQL.1\\MSSQL\\Backup\\master.bak' WITH REPLACE 4.Restart sql server service Note :If the master database restored on another server,the sql server installation directory cannot be changed.","title":"SQL Server 2005 restore master database"},{"location":"sqlserver/#clear-the-transation-log","text":"SQL SERVER 2000 backup LOG xmgga with NO_LOG GO dbcc shrinkdatabase (xmgga ,10) GO SQL SERVER 2008 -- BACKUP log newseditv2 with no_log USE newseditv2; GO -- Truncate the log by changing the database recovery model to SIMPLE ALTER DATABASE newseditv2 SET RECOVERY SIMPLE; GO -- Shrink the trun cated log file to 1 MB. DBCC SHRINKFILE (newseditv2_Log, 1); GO -- Reset the database recovery model ALTER DATABASE newseditv2 SET RECOVERY FULL; GO","title":"Clear the transation log"},{"location":"tomcat/","text":"Install Tomcat # cd /usr/local/src # tar -zxvf jdk-8u201-linux-x64.tar.gz # mv jdk1.8.0_201/ .. # tar -zxvf apache-tomcat-7.0.94.tar.gz # mv apache-tomcat-7.0.94 .. # ln -s jdk1.8.0_201 jdk # ln -s apache-tomcat-7.0.94 tomcat # vi /etc/profile export JAVA_HOME=/usr/local/jdk export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar export PATH=$PATH:$JAVA_HOME/bin # source /etc/profile # java -version # /usr/local/tomcat/bin/startup.sh Redirect Tomcat home page # vi /usr/local/tomcat/webapps/ROOT/index.jsp <%response.sendRedirect(\"../newsedit/login.jsp\");%> Replace default tomcat ico /usr/local/tomcat/webapps/ROOT/favicon.ico Configuration of server.xml connect Microsoft SQL Server # vi /usr/local/tomcat/conf/server.xml <Host name=\"localhost\" appBase=\"webapps\" unpackWARs=\"true\" autoDeploy=\"true\" xmlValidation=\"false\" xmlNamespaceAware=\"false\"> <Context crossContext=\"true\" debug=\"0\" docBase=\"/var/new-web\" path=\"/newsedit\" reloadable=\"false\"> <Resource name=\"jdbc/E5NEW\" type=\"javax.sql.DataSource\" driverClassName=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\" url=\"jdbc:sqlserver://172.17.107.125:1433;databasename=newseditv2\" username=\"username\" password=\"password\" maxIdle=\"20\" maxActive=\"25\" maxWait=\"10000\" /> <Resource name=\"jdbc/ADV\" type=\"javax.sql.DataSource\" driverClassName=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\" url=\"jdbc:sqlserver://172.25.24.7:1433;databasename=xmcm\" username=\"username\" password=\"password\" maxIdle=\"5\" maxActive=\"8\" maxWait=\"10000\" /> </Context> </Host> disable local host access log # vi /usr/local/tomcat/conf/server.xml comment out <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\" prefix=\"localhost_access_log.\" suffix=\".txt\" pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" /> support utf-8 uriencoding # vi /usr/local/tomcat/conf/server.xml <Connector port=\"81\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\" URIEncoding=\"UTF-8\" /> Logrotate Catalina.out # vi /etc/logrotate.d/tomcat /usr/local/tomcat/logs/catalina.out { daily rotate 15 missingok dateext nocompress notifempty copytruncate } # logrotate -d /etc/logrotate.d/tomcat # cat /var/lib/logrotate/logrotate.status Note :Logfiles and directory should have selinux context \"var_log_t\" # chcon -t var_log_t /usr/local/tomcat/logs # chcon -t var_log_t /usr/local/tomcat/logs/catalina.out Start tomcat on system boot # vi /etc/rc.d/rc.local export JAVA_HOME=/usr/local/jdk /usr/local/tomcat/bin/startup.sh Add rc.local execute permission # chmod 744 /etc/rc.d/rc.local Tomcat startup script # vi /etc/rc.d/init.d/tomcat #!/bin/bash # # /etc/rc.d/init.d/tomcat # init script for tomcat precesses # # processname: tomcat # description: tomcat is a j2se server # chkconfig: 2345 86 16 # description: Start up the Tomcat servlet engine. export JAVA_HOME=/usr/local/jdk export CATALINA_HOME=/usr/local/tomcat export CATALINA_BASE=/usr/local/tomcat export CATALINA_TMPDIR=/usr/local/tomcat/temp if [ -f /etc/init.d/functions ]; then . /etc/init.d/functions elif [ -f /etc/rc.d/init.d/functions ]; then . /etc/rc.d/init.d/functions else echo -e \"\\atomcat: unable to locate functions lib. Cannot continue.\" exit -1 fi RETVAL=$? CATALINA_HOME=\"/usr/local/tomcat\" case \"$1\" in start) if [ -f $CATALINA_HOME/bin/startup.sh ]; then echo $\"Starting Tomcat\" $CATALINA_HOME/bin/startup.sh fi ;; stop) if [ -f $CATALINA_HOME/bin/shutdown.sh ]; then echo $\"Stopping Tomcat\" $CATALINA_HOME/bin/shutdown.sh fi ;; *) echo $\"Usage: $0 {start|stop}\" exit 1 ;; esac exit $RETVAL # chmod +x /etc/rc.d/init.d/tomcat # chkconfig --add /etc/rc.d/init.d/tomcat Enabling JMX remote # vi /usr/local/tomcat/bin/catalina.sh # Enabling JMX Remote CATALINA_OPTS=\"$CATALINA_OPTS -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=192.168.152.111 -Dcom.sun.management.jmxremote.port=9102\"* Note :Disable tomcat server firewall,use jdk/bin/jconsole.exe to test connection","title":"Tomcat"},{"location":"tomcat/#install-tomcat","text":"# cd /usr/local/src # tar -zxvf jdk-8u201-linux-x64.tar.gz # mv jdk1.8.0_201/ .. # tar -zxvf apache-tomcat-7.0.94.tar.gz # mv apache-tomcat-7.0.94 .. # ln -s jdk1.8.0_201 jdk # ln -s apache-tomcat-7.0.94 tomcat # vi /etc/profile export JAVA_HOME=/usr/local/jdk export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar export PATH=$PATH:$JAVA_HOME/bin # source /etc/profile # java -version # /usr/local/tomcat/bin/startup.sh","title":"Install Tomcat"},{"location":"tomcat/#redirect-tomcat-home-page","text":"# vi /usr/local/tomcat/webapps/ROOT/index.jsp <%response.sendRedirect(\"../newsedit/login.jsp\");%>","title":"Redirect Tomcat home page"},{"location":"tomcat/#replace-default-tomcat-ico","text":"/usr/local/tomcat/webapps/ROOT/favicon.ico","title":"Replace default tomcat ico"},{"location":"tomcat/#configuration-of-serverxml","text":"connect Microsoft SQL Server # vi /usr/local/tomcat/conf/server.xml <Host name=\"localhost\" appBase=\"webapps\" unpackWARs=\"true\" autoDeploy=\"true\" xmlValidation=\"false\" xmlNamespaceAware=\"false\"> <Context crossContext=\"true\" debug=\"0\" docBase=\"/var/new-web\" path=\"/newsedit\" reloadable=\"false\"> <Resource name=\"jdbc/E5NEW\" type=\"javax.sql.DataSource\" driverClassName=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\" url=\"jdbc:sqlserver://172.17.107.125:1433;databasename=newseditv2\" username=\"username\" password=\"password\" maxIdle=\"20\" maxActive=\"25\" maxWait=\"10000\" /> <Resource name=\"jdbc/ADV\" type=\"javax.sql.DataSource\" driverClassName=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\" url=\"jdbc:sqlserver://172.25.24.7:1433;databasename=xmcm\" username=\"username\" password=\"password\" maxIdle=\"5\" maxActive=\"8\" maxWait=\"10000\" /> </Context> </Host> disable local host access log # vi /usr/local/tomcat/conf/server.xml comment out <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\" prefix=\"localhost_access_log.\" suffix=\".txt\" pattern=\"%h %l %u %t &quot;%r&quot; %s %b\" /> support utf-8 uriencoding # vi /usr/local/tomcat/conf/server.xml <Connector port=\"81\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\" URIEncoding=\"UTF-8\" />","title":"Configuration of server.xml"},{"location":"tomcat/#logrotate-catalinaout","text":"# vi /etc/logrotate.d/tomcat /usr/local/tomcat/logs/catalina.out { daily rotate 15 missingok dateext nocompress notifempty copytruncate } # logrotate -d /etc/logrotate.d/tomcat # cat /var/lib/logrotate/logrotate.status Note :Logfiles and directory should have selinux context \"var_log_t\" # chcon -t var_log_t /usr/local/tomcat/logs # chcon -t var_log_t /usr/local/tomcat/logs/catalina.out","title":"Logrotate Catalina.out"},{"location":"tomcat/#start-tomcat-on-system-boot","text":"# vi /etc/rc.d/rc.local export JAVA_HOME=/usr/local/jdk /usr/local/tomcat/bin/startup.sh Add rc.local execute permission # chmod 744 /etc/rc.d/rc.local","title":"Start tomcat on system boot"},{"location":"tomcat/#tomcat-startup-script","text":"# vi /etc/rc.d/init.d/tomcat #!/bin/bash # # /etc/rc.d/init.d/tomcat # init script for tomcat precesses # # processname: tomcat # description: tomcat is a j2se server # chkconfig: 2345 86 16 # description: Start up the Tomcat servlet engine. export JAVA_HOME=/usr/local/jdk export CATALINA_HOME=/usr/local/tomcat export CATALINA_BASE=/usr/local/tomcat export CATALINA_TMPDIR=/usr/local/tomcat/temp if [ -f /etc/init.d/functions ]; then . /etc/init.d/functions elif [ -f /etc/rc.d/init.d/functions ]; then . /etc/rc.d/init.d/functions else echo -e \"\\atomcat: unable to locate functions lib. Cannot continue.\" exit -1 fi RETVAL=$? CATALINA_HOME=\"/usr/local/tomcat\" case \"$1\" in start) if [ -f $CATALINA_HOME/bin/startup.sh ]; then echo $\"Starting Tomcat\" $CATALINA_HOME/bin/startup.sh fi ;; stop) if [ -f $CATALINA_HOME/bin/shutdown.sh ]; then echo $\"Stopping Tomcat\" $CATALINA_HOME/bin/shutdown.sh fi ;; *) echo $\"Usage: $0 {start|stop}\" exit 1 ;; esac exit $RETVAL # chmod +x /etc/rc.d/init.d/tomcat # chkconfig --add /etc/rc.d/init.d/tomcat","title":"Tomcat startup script"},{"location":"tomcat/#enabling-jmx-remote","text":"# vi /usr/local/tomcat/bin/catalina.sh # Enabling JMX Remote CATALINA_OPTS=\"$CATALINA_OPTS -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=192.168.152.111 -Dcom.sun.management.jmxremote.port=9102\"* Note :Disable tomcat server firewall,use jdk/bin/jconsole.exe to test connection","title":"Enabling JMX remote"},{"location":"ubuntu/","text":"Change hostname # sudo nano /etc/hostname # sudo nano /etc/hosts Configure ip address Note :The configuration syntax is yaml format # sudo vi /etc/netplan/01-netcfg.yaml network: ethernets: ens33: addresses: [172.17.105.88/16] gateway4: 172.17.1.250 nameservers: addresses: [202.96.209.5] version: 2 # sudo netplan apply Configure static route network: ethernets: eno1: dhcp4: false addresses: [192.168.1.81/24] routes: - to: 0.0.0.0/0 via: 192.168.1.1 metric: 30 optional: true eno2: addresses: [] dhcp4: true optional: true eno3: addresses: [] dhcp4: true optional: true eno4: dhcp4: false addresses: [10.202.186.115/27] routes: - to: 10.0.0.0/8 via: 10.202.186.126 metric: 20 optional: true version: 2 Configure apt source list # sudo vi /etc/apt/sources.list deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse Configure proxy for apt # sudo vi /etc/apt/apt.conf.d/proxy.conf Acquire::http::Proxy \"http://172.16.2.198:80/\"; Acquire::https::Proxy \"http://172.16.2.198:80/\"; Usage of apt command Install package # sudo apt-get install samba Search package # sudo apt-cache search samba Show details # sudo apt-cache show samba Sychronize packeage list # sudo apt update Update all packages # sudo apt upgrade Delete package # sudo apt-get autoremove chrony Clear cache # sudo apt-get clean Install security updates manually # sudo unattended-upgrades Samba Server Configuration Install samba package # sudo apt-get install samba Create samba user and share directory # sudo useradd -M -s /sbin/nologin username # sudo smbpasswd -a username # mkdir /home/ /sambashare Modify samba configuration # sudo nano /etc/samba/smb.conf [global] interfaces = 127.0.0.1, 192.168.0.31/24 bind interfaces only = yes hosts allow = 127.0.0.1, 192.168.0.31, 192.168.0.32 hosts deny = 0.0.0.0/0 [sambashare] comment = Samba on Ubuntu path = /home/username/sambashare read only = no browsable = yes Restart samba service # sudo service smbd restart Install Zabbix Agent # wget https://repo.zabbix.com/zabbix/4.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_4.0-2+bionic_all.deb # sudo dpkg -i zabbix-release_4.0-2+bionic_all.deb # sudo apt update # sudo apt-get install zabbix-agent Disable ipv6 # sudo vi /etc/default/grub GRUB_CMDLINE_LINUX_DEFAULT=\"ipv6.disable=1\" GRUB_CMDLINE_LINUX=\"ipv6.disable=1\" # sudo update-grub # sudo reboot UFW Usage # sudo ufw enable # sudo ufw allow from 172.17.105.0/24 to any port 22","title":"Ubuntu18"},{"location":"ubuntu/#change-hostname","text":"# sudo nano /etc/hostname # sudo nano /etc/hosts","title":"Change hostname"},{"location":"ubuntu/#configure-ip-address","text":"Note :The configuration syntax is yaml format # sudo vi /etc/netplan/01-netcfg.yaml network: ethernets: ens33: addresses: [172.17.105.88/16] gateway4: 172.17.1.250 nameservers: addresses: [202.96.209.5] version: 2 # sudo netplan apply Configure static route network: ethernets: eno1: dhcp4: false addresses: [192.168.1.81/24] routes: - to: 0.0.0.0/0 via: 192.168.1.1 metric: 30 optional: true eno2: addresses: [] dhcp4: true optional: true eno3: addresses: [] dhcp4: true optional: true eno4: dhcp4: false addresses: [10.202.186.115/27] routes: - to: 10.0.0.0/8 via: 10.202.186.126 metric: 20 optional: true version: 2","title":"Configure ip address"},{"location":"ubuntu/#configure-apt-source-list","text":"# sudo vi /etc/apt/sources.list deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse","title":"Configure apt source list"},{"location":"ubuntu/#configure-proxy-for-apt","text":"# sudo vi /etc/apt/apt.conf.d/proxy.conf Acquire::http::Proxy \"http://172.16.2.198:80/\"; Acquire::https::Proxy \"http://172.16.2.198:80/\";","title":"Configure proxy for apt"},{"location":"ubuntu/#usage-of-apt-command","text":"Install package # sudo apt-get install samba Search package # sudo apt-cache search samba Show details # sudo apt-cache show samba Sychronize packeage list # sudo apt update Update all packages # sudo apt upgrade Delete package # sudo apt-get autoremove chrony Clear cache # sudo apt-get clean","title":"Usage of apt command"},{"location":"ubuntu/#install-security-updates-manually","text":"# sudo unattended-upgrades","title":"Install security updates manually"},{"location":"ubuntu/#samba-server-configuration","text":"Install samba package # sudo apt-get install samba Create samba user and share directory # sudo useradd -M -s /sbin/nologin username # sudo smbpasswd -a username # mkdir /home/ /sambashare Modify samba configuration # sudo nano /etc/samba/smb.conf [global] interfaces = 127.0.0.1, 192.168.0.31/24 bind interfaces only = yes hosts allow = 127.0.0.1, 192.168.0.31, 192.168.0.32 hosts deny = 0.0.0.0/0 [sambashare] comment = Samba on Ubuntu path = /home/username/sambashare read only = no browsable = yes Restart samba service # sudo service smbd restart","title":"Samba Server Configuration"},{"location":"ubuntu/#install-zabbix-agent","text":"# wget https://repo.zabbix.com/zabbix/4.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_4.0-2+bionic_all.deb # sudo dpkg -i zabbix-release_4.0-2+bionic_all.deb # sudo apt update # sudo apt-get install zabbix-agent","title":"Install Zabbix Agent"},{"location":"ubuntu/#disable-ipv6","text":"# sudo vi /etc/default/grub GRUB_CMDLINE_LINUX_DEFAULT=\"ipv6.disable=1\" GRUB_CMDLINE_LINUX=\"ipv6.disable=1\" # sudo update-grub # sudo reboot","title":"Disable ipv6"},{"location":"ubuntu/#ufw-usage","text":"# sudo ufw enable # sudo ufw allow from 172.17.105.0/24 to any port 22","title":"UFW Usage"},{"location":"vsphere/","text":"Update ESXi Patch Enable ESXi Server ssh # esxcli software vib install -d=\"/vmfs/volumes/datastore1/patch/update-from-esxi6.5-6.5_update01.zip\" Download ESXi Patch Log In to the vCenter Server Appliance Management Interface https://vCenter-Server-IP:5480 username:root password:","title":"Vsphere"},{"location":"vsphere/#update-esxi-patch","text":"Enable ESXi Server ssh # esxcli software vib install -d=\"/vmfs/volumes/datastore1/patch/update-from-esxi6.5-6.5_update01.zip\" Download ESXi Patch","title":"Update ESXi Patch"},{"location":"vsphere/#log-in-to-the-vcenter-server-appliance-management-interface","text":"https://vCenter-Server-IP:5480 username:root password:","title":"Log In to the vCenter Server Appliance Management Interface"},{"location":"windows/","text":"Windows AVMA Key Windows Server 2016 Windows Server 2016 Datacenter TMJ3Y-NTRTM-FJYXT-T22BY-CWG3J Windows Server 2016 Standard C3RCX-M6NRP-6CXC9-TW2F2-4RHYD Windows Server 2016 Essentials B4YNW-62DX9-W8V6M-82649-MHBKQ Windows 10 Windows 10 Enterprise NPPR9-FWDCX-D2C8J-H872K-2YT43 Windows 10 Pro VK7JG-NPHTM-C97JM-9MPGT-3V66T Windows 10 Home TX9XD-98N7V-6WMQ6-BX7FG-H8Q99 Windows 2012 R2 Windows Server 2012 R2 Datacenter Y4TGP-NPTV9-HTC2H-7MGQ3-DV4TW Windows Server 2012 R2 Standard DBGBW-NPF86-BJVTX-K3WKJ-MTB6V Windows Server 2012 R2 Essentials K2XGM-NMBT3-2R6Q8-WF2FK-P36R2 Windows 8.1 Windows 8.1 Professional GCRJD-8NW9H-F2CDX-CCM8D-9D6T9 Windows 8.1 Professional N HMCNV-VVBFX-7HMBH-CTY9B-B4FXY Windows 8.1 Enterprise MHF9N-XY6XB-WVXMC-BTDCT-MKKG7 Windows 8.1 Enterprise N TT4HM-HN7YT-62K67-RGRQJ-JFFXW Usage: slmgr.vbs /ipk key Command xcopy xcopy source destination /S /E /D IIS logfile delete script @echo off set log_dir=\"C:\\inetpub\\logs\\LogFiles\" set bak_dat=260 forfiles /p %log_dir% /S /M *.log /D -%bak_dat% /C \"cmd /c echo \u6b63\u5728\u5220\u9664@relpath \u6587\u4ef6\u2026 & echo. & del @file\" Ping detect script @echo off set /p ip=\"Please input ip range\u00a3\u00acformat:\"192.168.1.\" >>> \" for /L %%i in (1,1,254) do ( Ping.exe -n 1 -l 16 -w 100 %ip%%%i>>nul if not errorlevel 1 (echo %ip%%%i is online)>>result.txt )","title":"Windows"},{"location":"windows/#windows-avma-key","text":"Windows Server 2016 Windows Server 2016 Datacenter TMJ3Y-NTRTM-FJYXT-T22BY-CWG3J Windows Server 2016 Standard C3RCX-M6NRP-6CXC9-TW2F2-4RHYD Windows Server 2016 Essentials B4YNW-62DX9-W8V6M-82649-MHBKQ Windows 10 Windows 10 Enterprise NPPR9-FWDCX-D2C8J-H872K-2YT43 Windows 10 Pro VK7JG-NPHTM-C97JM-9MPGT-3V66T Windows 10 Home TX9XD-98N7V-6WMQ6-BX7FG-H8Q99 Windows 2012 R2 Windows Server 2012 R2 Datacenter Y4TGP-NPTV9-HTC2H-7MGQ3-DV4TW Windows Server 2012 R2 Standard DBGBW-NPF86-BJVTX-K3WKJ-MTB6V Windows Server 2012 R2 Essentials K2XGM-NMBT3-2R6Q8-WF2FK-P36R2 Windows 8.1 Windows 8.1 Professional GCRJD-8NW9H-F2CDX-CCM8D-9D6T9 Windows 8.1 Professional N HMCNV-VVBFX-7HMBH-CTY9B-B4FXY Windows 8.1 Enterprise MHF9N-XY6XB-WVXMC-BTDCT-MKKG7 Windows 8.1 Enterprise N TT4HM-HN7YT-62K67-RGRQJ-JFFXW Usage: slmgr.vbs /ipk key","title":"Windows AVMA Key"},{"location":"windows/#command-xcopy","text":"xcopy source destination /S /E /D","title":"Command xcopy"},{"location":"windows/#iis-logfile-delete-script","text":"@echo off set log_dir=\"C:\\inetpub\\logs\\LogFiles\" set bak_dat=260 forfiles /p %log_dir% /S /M *.log /D -%bak_dat% /C \"cmd /c echo \u6b63\u5728\u5220\u9664@relpath \u6587\u4ef6\u2026 & echo. & del @file\"","title":"IIS logfile delete script"},{"location":"windows/#ping-detect-script","text":"@echo off set /p ip=\"Please input ip range\u00a3\u00acformat:\"192.168.1.\" >>> \" for /L %%i in (1,1,254) do ( Ping.exe -n 1 -l 16 -w 100 %ip%%%i>>nul if not errorlevel 1 (echo %ip%%%i is online)>>result.txt )","title":"Ping detect script"},{"location":"zabbix/","text":"Zabbix 4.0 reference documentation Official documentation Agent download VMware monitoring Windows specific item keys Supported trigger functions The parameters supported in a Zabbix agent configuration file Custom alertscripts Unit blacklisting Install Zabbix Server 4.0 Disable selinux # vi /etc/selinux/config SELINUX=disabled Adding Zabbix repository # rpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm # yum -y install yum-utils # yum-config-manager --enable rhel-7-server-optional-rpms Use aliyun Zabbix repository # vi /etc/yum.repos.d/zabbix.repo [zabbix] baseurl=http://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/$basearch/ [zabbix-non-supported] baseurl=http://mirrors.aliyun.com/zabbix/non-supported/rhel/7/$basearch/ Install Zabbix Server,Mariadb # yum install zabbix-server-mysql -y # yum install zabbix-web-mysql -y # yum install mariadb-server.x86_64 -y Initialize database # systemctl start mariadb # mysql_secure_installation # mysql -u root -p mysql> create database zabbix character set utf8 collate utf8_bin; mysql> grant all privileges on zabbix. to zabbix@localhost identified by 'PASSWORD'; mysql> quit; # zcat /usr/share/doc/zabbix-server-mysql /create.sql.gz | mysql -uzabbix -p zabbix Configure database for Zabbix server # vi /etc/zabbix/zabbix_server.conf DBHost=localhost DBName=zabbix DBUser=zabbix DBPassword=<password> Zabbix frontend configuration # vi /etc/httpd/conf.d/zabbix.conf php_value date.timezone Asia/Shanghai Install Zabbix Agent # yum install zabbix-agent -y Starting Zabbix server process # systemctl start httpd # systemctl start zabbix-server # systemctl start zabbix-agent Add http/agent port in firewalld # firewall-cmd --zone=public --add-port=80/tcp --permanent # firewall-cmd --zone=public --add-port=10051/tcp --permanent # firewall-cmd --reload Configure Zabbix Server Login http://192.168.152.100/zabbix username:Admin passowrd:zabbix Use Zabbix-get for getting data from agent # yum install zabbix-get -y # zabbix_get -s 192.168.1.106 -p 10050 -k \"system.cpu.load[all]\" Raplace default font to support chinese simplified # cp msyh.ttf /usr/share/zabbix/fonts # cd /usr/share/zabbix/include # vim defines.inc.php Apache homepage redirect # vi /var/www/html/index.html <html> <head><title>Zabbix</title></head> <body> <script>window.location.href = './zabbix';</script> </body> </html> Monitor VMware vCenter Server # vi /etc/zabbix/zabbix_server.conf StartVMwareCollectors=5 VMwareFrequency=180 VMwarePerfFrequency=180 VMwareCacheSize=8M VMwareTimeout=10 # systemctl restart zabbix-server Choose Template VM VMware for vCenter Server Set the host macros for VMware authentication {$URL} VMware (vCenter or ESX hypervisor) SDK URL (https://servername/sdk) {$USERNAME} user@vsphere.local {$PASSWORD} Monitor Windows Server - Install Zabbix-agent SET INSTALLFOLDER=C:\\Program Files\\Zabbix Agent msiexec /l*v log.txt /i zabbix_agent-4.0.6-win-amd64-openssl.msi /qn^ LOGTYPE=file^ LOGFILE=\"%INSTALLFOLDER%\\zabbix_agentd.log\"^ ENABLEREMOTECOMMANDS=0^ SERVER=172.17.105.117^ LISTENPORT=10050^ SERVERACTIVE=172.17.105.117^ HOSTNAME=\"%COMPUTERNAME%\"^ TLSCONNECT=unencrypted^ TLSACCEPT=unencrypted^ INSTALLFOLDER=\"%INSTALLFOLDER%\" - Eventlog Key eventlog[name,regexp,severity,source,eventid,maxlines,mode] Introduction name - name of event log regexp - regular expressiondescribing the required pattern severity - regular expressiondescribing severity The parameter accepts the following values: \u201cInformation\u201d, \u201cWarning\u201d, \u201cError\u201d, \u201cCritical\u201d, \u201cVerbose\u201d In older Zabbix versions running on any Windows version it would be\u201cInformation\u201d, \u201cWarning\u201d, \u201cError\u201d, \u201cFailure Audit\u201d, \u201cSuccess Audit\u201d source - regular expressiondescribing source identifier eventid - regular expressiondescribing the event identifier(s) maxlines - maximum number of new lines per second the agent will send to Zabbix server or proxy. This parameter overrides the value of 'MaxLinesPerSecond' in zabbix_agentd.win.conf mode - possible values: all (default), skip (skip processing of olderdata) Note :The item must be configured as zabbix active mode Examples eventlog[Security,,\"Failure Audit\",,^(529|680)$] eventlog[System,,\"Warning|Error\"] eventlog[Security,,\"Failure Audit\",,^4625$,,skip] eventlog[Application,,\"Warning\",^Symantec,^400$,,skip] - Performance monitor perf_counter[\"\\Forefront TMG Web Proxy\\Cache Hit Ratio for Last 10K Requests (%)\"] - Count active process proc.num[java.exe] - Count number of files Create text file in C:\\Program Files\\Zabbix Agent\\zabbix_agentd.conf.d\\userparameter_files.number.conf UserParameter=files.number.wh,dir e:\\data\\wh /s /w /b /a-d | find /v /c \"\" UserParameter=files.number.xm,dir e:\\data\\xm /s /w /b /a-d | find /v /c \"\" Monitor Linux Server - Zabbix Agent active configuration # sed -i 's/# StartAgents=3/StartAgents=0/' /etc/zabbix/zabbix_agentd.conf # sed -i 's/ServerActive=127.0.0.1/ServerActive=192.168.152.100/' /etc/zabbix/zabbix_agentd.conf # sed -i 's/Hostname=Zabbix server/Hostname='$HOSTNAME'/' /etc/zabbix/zabbix_agentd.conf - Selinux deny Zabbix agent starting # yum -y install policycoreutils-python.x86_64 # cat /var/log/audit/audit.log | grep zabbix | grep denied | audit2allow -M zabbix-agent # semodule -i zabbix-agent.pp # yum -y install policycoreutils-python.x86_64 # semanage permissive -a zabbix_agent_t - Monitor Linux Login Use Zabbix agent active and authorize read privilege of secure log file for zabbix user # setfacl -m u:zabbix:r-- /var/log/secure # sed -i '/kill/a\\/usr\\/bin\\/setfacl -m u:zabbix:r-- \\/var\\/log\\/secure' /etc/logrotate.d/syslog Create new item key \"log[/var/log/secure,\"(Accepted|Failed) password\",,,skip,]\" - Examples of customized key Customized key \"ambient.temp\" # vi /etc/zabbix/zabbix_agentd.d/userparameter_ambient.temp.conf UserParameter=ambient.temp,sudo /usr/bin/ipmitool sdr entity 12.1 | awk 'NR==1{print $10}' Allocate sudo privilege for zabbix user # visudo #Defaults requiretty zabbix ALL=(ALL) NOPASSWD: /usr/bin/ipmitool Restart zabbix agent # /etc/init.d/zabbix-agent restart If zabbix server have a problem mentioned timeout while executing a shell script,the zabbix agent profile should be modified. # vi /etc/zabbix/zabbix_agentd.conf Timeout=10 Customized key \"db.backup[*]\" # vi /etc/zabbix/zabbix_agentd.d/userparameter_db.backup.conf UserParameter=db.backup[\\*],/bin/find /home/data/$1-bak -type f -ctime -$2 | wc -l Custom Template Windows EventLog Login Audit Linux Login Audit Symantec Network Protection","title":"Zabbix"},{"location":"zabbix/#zabbix-40-reference-documentation","text":"Official documentation Agent download VMware monitoring Windows specific item keys Supported trigger functions The parameters supported in a Zabbix agent configuration file Custom alertscripts Unit blacklisting","title":"Zabbix 4.0 reference documentation"},{"location":"zabbix/#install-zabbix-server-40","text":"Disable selinux # vi /etc/selinux/config SELINUX=disabled Adding Zabbix repository # rpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm # yum -y install yum-utils # yum-config-manager --enable rhel-7-server-optional-rpms Use aliyun Zabbix repository # vi /etc/yum.repos.d/zabbix.repo [zabbix] baseurl=http://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/$basearch/ [zabbix-non-supported] baseurl=http://mirrors.aliyun.com/zabbix/non-supported/rhel/7/$basearch/ Install Zabbix Server,Mariadb # yum install zabbix-server-mysql -y # yum install zabbix-web-mysql -y # yum install mariadb-server.x86_64 -y Initialize database # systemctl start mariadb # mysql_secure_installation # mysql -u root -p mysql> create database zabbix character set utf8 collate utf8_bin; mysql> grant all privileges on zabbix. to zabbix@localhost identified by 'PASSWORD'; mysql> quit; # zcat /usr/share/doc/zabbix-server-mysql /create.sql.gz | mysql -uzabbix -p zabbix Configure database for Zabbix server # vi /etc/zabbix/zabbix_server.conf DBHost=localhost DBName=zabbix DBUser=zabbix DBPassword=<password> Zabbix frontend configuration # vi /etc/httpd/conf.d/zabbix.conf php_value date.timezone Asia/Shanghai Install Zabbix Agent # yum install zabbix-agent -y Starting Zabbix server process # systemctl start httpd # systemctl start zabbix-server # systemctl start zabbix-agent Add http/agent port in firewalld # firewall-cmd --zone=public --add-port=80/tcp --permanent # firewall-cmd --zone=public --add-port=10051/tcp --permanent # firewall-cmd --reload","title":"Install Zabbix Server 4.0"},{"location":"zabbix/#configure-zabbix-server","text":"Login http://192.168.152.100/zabbix username:Admin passowrd:zabbix Use Zabbix-get for getting data from agent # yum install zabbix-get -y # zabbix_get -s 192.168.1.106 -p 10050 -k \"system.cpu.load[all]\" Raplace default font to support chinese simplified # cp msyh.ttf /usr/share/zabbix/fonts # cd /usr/share/zabbix/include # vim defines.inc.php Apache homepage redirect # vi /var/www/html/index.html <html> <head><title>Zabbix</title></head> <body> <script>window.location.href = './zabbix';</script> </body> </html>","title":"Configure Zabbix Server"},{"location":"zabbix/#monitor-vmware-vcenter-server","text":"# vi /etc/zabbix/zabbix_server.conf StartVMwareCollectors=5 VMwareFrequency=180 VMwarePerfFrequency=180 VMwareCacheSize=8M VMwareTimeout=10 # systemctl restart zabbix-server Choose Template VM VMware for vCenter Server Set the host macros for VMware authentication {$URL} VMware (vCenter or ESX hypervisor) SDK URL (https://servername/sdk) {$USERNAME} user@vsphere.local {$PASSWORD}","title":"Monitor VMware vCenter Server"},{"location":"zabbix/#monitor-windows-server","text":"","title":"Monitor Windows Server"},{"location":"zabbix/#-install-zabbix-agent","text":"SET INSTALLFOLDER=C:\\Program Files\\Zabbix Agent msiexec /l*v log.txt /i zabbix_agent-4.0.6-win-amd64-openssl.msi /qn^ LOGTYPE=file^ LOGFILE=\"%INSTALLFOLDER%\\zabbix_agentd.log\"^ ENABLEREMOTECOMMANDS=0^ SERVER=172.17.105.117^ LISTENPORT=10050^ SERVERACTIVE=172.17.105.117^ HOSTNAME=\"%COMPUTERNAME%\"^ TLSCONNECT=unencrypted^ TLSACCEPT=unencrypted^ INSTALLFOLDER=\"%INSTALLFOLDER%\"","title":"- Install Zabbix-agent"},{"location":"zabbix/#-eventlog","text":"Key eventlog[name,regexp,severity,source,eventid,maxlines,mode] Introduction name - name of event log regexp - regular expressiondescribing the required pattern severity - regular expressiondescribing severity The parameter accepts the following values: \u201cInformation\u201d, \u201cWarning\u201d, \u201cError\u201d, \u201cCritical\u201d, \u201cVerbose\u201d In older Zabbix versions running on any Windows version it would be\u201cInformation\u201d, \u201cWarning\u201d, \u201cError\u201d, \u201cFailure Audit\u201d, \u201cSuccess Audit\u201d source - regular expressiondescribing source identifier eventid - regular expressiondescribing the event identifier(s) maxlines - maximum number of new lines per second the agent will send to Zabbix server or proxy. This parameter overrides the value of 'MaxLinesPerSecond' in zabbix_agentd.win.conf mode - possible values: all (default), skip (skip processing of olderdata) Note :The item must be configured as zabbix active mode Examples eventlog[Security,,\"Failure Audit\",,^(529|680)$] eventlog[System,,\"Warning|Error\"] eventlog[Security,,\"Failure Audit\",,^4625$,,skip] eventlog[Application,,\"Warning\",^Symantec,^400$,,skip]","title":"- Eventlog"},{"location":"zabbix/#-performance-monitor","text":"perf_counter[\"\\Forefront TMG Web Proxy\\Cache Hit Ratio for Last 10K Requests (%)\"]","title":"- Performance monitor"},{"location":"zabbix/#-count-active-process","text":"proc.num[java.exe]","title":"- Count active process"},{"location":"zabbix/#-count-number-of-files","text":"Create text file in C:\\Program Files\\Zabbix Agent\\zabbix_agentd.conf.d\\userparameter_files.number.conf UserParameter=files.number.wh,dir e:\\data\\wh /s /w /b /a-d | find /v /c \"\" UserParameter=files.number.xm,dir e:\\data\\xm /s /w /b /a-d | find /v /c \"\"","title":"- Count number of files"},{"location":"zabbix/#monitor-linux-server","text":"","title":"Monitor Linux Server"},{"location":"zabbix/#-zabbix-agent-active-configuration","text":"# sed -i 's/# StartAgents=3/StartAgents=0/' /etc/zabbix/zabbix_agentd.conf # sed -i 's/ServerActive=127.0.0.1/ServerActive=192.168.152.100/' /etc/zabbix/zabbix_agentd.conf # sed -i 's/Hostname=Zabbix server/Hostname='$HOSTNAME'/' /etc/zabbix/zabbix_agentd.conf","title":"- Zabbix Agent active configuration"},{"location":"zabbix/#-selinux-deny-zabbix-agent-starting","text":"# yum -y install policycoreutils-python.x86_64 # cat /var/log/audit/audit.log | grep zabbix | grep denied | audit2allow -M zabbix-agent # semodule -i zabbix-agent.pp # yum -y install policycoreutils-python.x86_64 # semanage permissive -a zabbix_agent_t","title":"- Selinux deny Zabbix agent starting"},{"location":"zabbix/#-monitor-linux-login","text":"Use Zabbix agent active and authorize read privilege of secure log file for zabbix user # setfacl -m u:zabbix:r-- /var/log/secure # sed -i '/kill/a\\/usr\\/bin\\/setfacl -m u:zabbix:r-- \\/var\\/log\\/secure' /etc/logrotate.d/syslog Create new item key \"log[/var/log/secure,\"(Accepted|Failed) password\",,,skip,]\"","title":"- Monitor Linux Login"},{"location":"zabbix/#-examples-of-customized-key","text":"Customized key \"ambient.temp\" # vi /etc/zabbix/zabbix_agentd.d/userparameter_ambient.temp.conf UserParameter=ambient.temp,sudo /usr/bin/ipmitool sdr entity 12.1 | awk 'NR==1{print $10}' Allocate sudo privilege for zabbix user # visudo #Defaults requiretty zabbix ALL=(ALL) NOPASSWD: /usr/bin/ipmitool Restart zabbix agent # /etc/init.d/zabbix-agent restart If zabbix server have a problem mentioned timeout while executing a shell script,the zabbix agent profile should be modified. # vi /etc/zabbix/zabbix_agentd.conf Timeout=10 Customized key \"db.backup[*]\" # vi /etc/zabbix/zabbix_agentd.d/userparameter_db.backup.conf UserParameter=db.backup[\\*],/bin/find /home/data/$1-bak -type f -ctime -$2 | wc -l","title":"- Examples of customized key"},{"location":"zabbix/#custom-template","text":"Windows EventLog Login Audit Linux Login Audit Symantec Network Protection","title":"Custom Template"}]}